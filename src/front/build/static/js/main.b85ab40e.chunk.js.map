{"version":3,"sources":["services/Location.tsx","theme/FastDatasetCleanerTheme.tsx","services/Keyboard.tsx","services/LocalStorage.tsx","components/elements/Button.tsx","components/elements/TextDisplay.tsx","components/elements/Input.tsx","components/elements/Separator.tsx","components/elements/Section.tsx","components/elements/Select.tsx","components/elements/Switch.tsx","components/BannerContent.tsx","components/elements/Overlay.tsx","components/Banner.tsx","components/Sample.tsx","components/SampleAnnotation.tsx","services/Arguments.tsx","services/Api.tsx","services/FetchUtils.tsx","services/Fetch.tsx","services/Wheel.tsx","components/FinalScreen.tsx","components/Progress.tsx","App.tsx","Bootstrap.jsx","serviceWorker.js","index.js","components/menu_logo.png"],"names":["UrlArgs","nightMode","isNightMode","unit","color","FAST_DATASET_CLEANER","FAST_DATASET_CLEANER_LIGHT","page","reversePage","pageNight","pageDay","VALID","NOTVALID","banner","bannerText","bannerSeparator","overlay","speed","fast","veryFast","ultraFast","fontSize","small","medium","large","xlarge","fontFamily","opacity","light","dark","KEYS_LEFT","KEYS_RIGHT","KEYS_NEXT","KEYS_OPEN_CLOSE_BANNER","KEYS_GET_IMAGES","useKeyboard","handleKeyPress","useEffect","document","addEventListener","removeEventListener","HANDLE_KEY_PRESS","event","pressLeft","pressRight","pressNext","keyPressed","key","includes","getLSValue","localStorage","getItem","setLSValue","value","setItem","trim","getAnnotator","OPTIONS_IMG_PER_PAGE","getImgPerPage","parseInt","setImgPerPage","imgsPerPage","getSha","setSha","password","getDatasetPath","setDatasetPath","path","getImagesFolder","setImagesFolder","getMasksFolder","setMasksFolder","OPTIONS_USE_MASKS","getUseMasks","setUseMasks","useMasks","getIdColumnName","setIdColumnName","name","getImagesExtension","setImagesExtension","ext","getMasksExtension","setMasksExtension","getAnnotationUltraFastModeLS","getSharedUrl","origin","URL","window","location","href","args","sha","csv","imgPerPage","imagesFolder","masksFolder","idColumn","imgExt","masksExt","push","CSV_PATH","IMAGES_PER_PAGE","ID_COLUMN","IMAGES_FOLDER","USE_MASKS","toLowerCase","MASKS_FOLDER","IMAGES_EXTENSION","MASKS_EXTENSION","PASSWORD","join","createSharedUrlArgs","updateUrl","history","pushState","setLSFromUrl","url","arg","setter","searchParams","get","withStyles","button","width","fontWeight","padding","borderRadius","background","textOverflow","overflow","whiteSpace","maxHeight","cursor","transition","bannerElement","bannerHidden","transform","props","title","isHidden","handleClick","css","styles","type","onClick","displayedText","textAlign","marginBlockEnd","text","titleInput","inputArea","boxShadow","margin","displayInputValue","onChange","onBlur","useState","valueInput","setValueInput","e","inputValue","target","separator","height","thinSeparator","thin","titleSection","marginBlockStart","children","select","options","map","option","switch","position","display","backgroundColor","switchChecked","switchInput","roundSlider","top","right","content","switchHeight","left","bottom","roundSliderChecked","switchWidth","switchArea","switchLegend","stateFalse","stateTrue","checked","setChecked","newChecked","handleClickGetImages","reload","bannerContent","marginTop","zIndex","overflowY","bannerOpen","isClicked","params","urlCsvPath","urlImagesPerPage","urlPassword","urlImagesFolder","urlMasksFolder","urlUseMasks","urlIdColumn","urlImagesExtension","urlMasksExtension","annot","setAnnot","setCsv","imagesPerPage","setImagesPerPage","shaPass","setShaPass","imgFold","setImgFold","maskFold","setMaskFold","setUseMasksValue","setIdColumn","setImgExt","setMasksExt","annotationUltraFastMode","setAnnotationUltraFastMode","InputBanner","useCallback","SelectBanner","SwitchBanner","SectionBanner","ButtonBanner","csvPath","folder","extension","useMasksValue","annotator","setAnnotator","toString","mode","setAnnotationUltraFastModeLS","overlayHidden","isVisible","style","noop","INPUT_TAGS","logoClicked","logoNotClicked","logo","nightButton","openBannerWidth","nightButtonHidden","closeBannerWidth","isBannerOpen","handleBanner","changeNightMode","noActiveInputTag","activeElement","indexOf","tagName","onClickCard","titleDayNightMode","src","MenuLogo","alt","BannerContent","maxHeightCardContent","card","border","minHeight","cardUltraFast","cardValid","cardNotValid","cardNotValidUltraFast","annotated","cardAnnotated","idCard","borderRight","id","image","marginLeft","maxWidth","sample","navigationDirection","fetchService","handleChangeValue","sampleNumber","changing","isValid","setIsValid","ultraFastMode","inView","setInView","toggleValue","cardStyle","translationInOut","from","enter","leave","transitions","useTransition","item","propsBis","div","onKeyDown","getImage","GetImageArgs","mainColumnHeight","mainColumn","marginRight","paddingTop","paddingBottom","flexWrap","images","HEADERS_POST","makeBody","json","method","headers","body","JSON","stringify","formatImages","index","formatImage","FetchService","api_address","totalImages","processedImages","samples","firstLoading","getSample","getProgress","currentPage","numberImagesPerPage","changePage","condition","newPage","getAnnotations","Promise","incrPage","decrPage","nextPage","annotate","setValue","newSample","endpoint","a","fetch","then","res","post","first","Api","data","error","alert","treatNewData","imageId","ID","annotations","_","this","total","processed","undefined","length","lastPage","Math","ceil","HANDLE_HORIZONTAL_WHEEL","wheelLeft","wheelRight","deltaX","deltaY","visualViewport","scale","abs","handleClickButton","Screen","paragraph","reloadButton","progress","paddingRight","arrow","navigationArrows","handlePressLeft","handlePressRight","firstIndex","lastIndex","min","pct","toPrecision","App","setBannerOpen","setSamples","setNavigationDirection","updateSamples","direction","currentUrl","readUrl","finally","handleHorizontalWheel","throttled","throttle","className","now","Date","getHours","NIGHT_MODE","Bootstrap","setNightMode","FastDatasetCleanerThemeType","SET_BACKGROUND_COLOR","Provider","stylesInterface","AphroditeInterface","stylesTheme","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.b85ab40e.chunk.js","sourcesContent":["import {\n    getSha,\n    getDatasetPath,\n    getImgPerPage,\n    getImagesFolder,\n    getMasksFolder,\n    getUseMasks,\n    getIdColumnName,\n    setSha,\n    setDatasetPath,\n    setImgPerPage,\n    setImagesFolder,\n    setMasksFolder,\n    setUseMasks,\n    setIdColumnName,\n    getImagesExtension,\n    getMasksExtension,\n    setImagesExtension,\n    setMasksExtension\n} from \"./LocalStorage\";\n\nexport enum UrlArgs {\n    PASSWORD = 'sha',\n    IMAGES_PER_PAGE = 'imgPerPage',\n    CSV_PATH = 'csv',\n    IMAGES_FOLDER = 'imagesFolder',\n    MASKS_FOLDER = 'masksFolder',\n    USE_MASKS = 'useMasks',\n    ID_COLUMN = 'idColumn',\n    IMAGES_EXTENSION = 'imgExt',\n    MASKS_EXTENSION = 'maskExt',\n};\n\nconst createSharedUrlArgs = () => {\n    let args: string[] = [];\n    const sha = getSha();\n    const csv = getDatasetPath();\n    const imgPerPage = getImgPerPage();\n    const imagesFolder = getImagesFolder();\n    const masksFolder = getMasksFolder();\n    const useMasks = getUseMasks();\n    const idColumn = getIdColumnName();\n    const imgExt = getImagesExtension();\n    const masksExt = getMasksExtension();\n\n    if (csv) {\n        args.push(`${UrlArgs.CSV_PATH}=${csv}`);\n    }\n    if (imgPerPage) {\n        args.push(`${UrlArgs.IMAGES_PER_PAGE}=${imgPerPage}`);\n    }\n    if (idColumn) {\n        args.push(`${UrlArgs.ID_COLUMN}=${idColumn}`);\n    }\n    if (imagesFolder) {\n        args.push(`${UrlArgs.IMAGES_FOLDER}=${imagesFolder}`);\n    }\n    if (useMasks) {\n        args.push(`${UrlArgs.USE_MASKS}=${useMasks}`);\n    }\n    if (useMasks?.toLowerCase() === 'true' && masksFolder) {\n        args.push(`${UrlArgs.MASKS_FOLDER}=${masksFolder}`);\n    }\n    if (imgExt) {\n        args.push(`${UrlArgs.IMAGES_EXTENSION}=${imgExt}`);\n    }\n    if (masksExt) {\n        args.push(`${UrlArgs.MASKS_EXTENSION}=${masksExt}`);\n    }\n    if (sha) {\n        args.push(`${UrlArgs.PASSWORD}=${sha}`);\n    }\n\n    if (args === []) {\n        return \"\";\n    }\n    return \"?\" + args.join('&');\n};\n\nconst getSharedUrl = () => {\n    const currentUrl = new URL(window.location.href);\n    const origin = currentUrl.origin;\n    const args = createSharedUrlArgs();\n    return `${origin}${args}`;\n}\n\nexport function updateUrl() {\n    window.history.pushState(null, \"Fast Dataset Cleaner\", getSharedUrl());\n}\n\nconst setLSFromUrl = (url: URL, arg: string, setter: Function) => {\n    const value = url.searchParams.get(arg)\n    if (value) {\n        setter(value);\n    }\n}\n\nexport const readUrl = () => {\n    const currentUrl = new URL(window.location.href);\n    setLSFromUrl(currentUrl, UrlArgs.PASSWORD, setSha);\n    setLSFromUrl(currentUrl, UrlArgs.CSV_PATH, setDatasetPath);\n    setLSFromUrl(currentUrl, UrlArgs.IMAGES_PER_PAGE, setImgPerPage);\n    setLSFromUrl(currentUrl, UrlArgs.IMAGES_FOLDER, setImagesFolder);\n    setLSFromUrl(currentUrl, UrlArgs.MASKS_FOLDER, setMasksFolder);\n    setLSFromUrl(currentUrl, UrlArgs.USE_MASKS, setUseMasks);\n    setLSFromUrl(currentUrl, UrlArgs.ID_COLUMN, setIdColumnName);\n    setLSFromUrl(currentUrl, UrlArgs.IMAGES_EXTENSION, setImagesExtension);\n    setLSFromUrl(currentUrl, UrlArgs.MASKS_EXTENSION, setMasksExtension);\n}\n","import { Theme } from \"react-with-styles\";\n\nexport type FastDatasetCleanerThemeType = {\n  isNightMode: boolean;\n  unit: number;\n  color: any;\n  speed: any;\n  fontSize: any;\n  fontFamily: string;\n  opacity: any;\n} & Theme;\n\nconst COLOR_PAGE_DAY = '#fff';\nconst COLOR_PAGE_NIGHT = '#333';\n\nexport default (nightMode: boolean) => ({\n    isNightMode: nightMode,\n    unit: 8,\n    color: {\n      FAST_DATASET_CLEANER: '#00155A',\n      FAST_DATASET_CLEANER_LIGHT: '#2457ff',\n      page: nightMode ? COLOR_PAGE_NIGHT : COLOR_PAGE_DAY,\n      reversePage: nightMode ? COLOR_PAGE_DAY : COLOR_PAGE_NIGHT,\n      pageNight: COLOR_PAGE_NIGHT,\n      pageDay: COLOR_PAGE_DAY,\n      VALID: '#3caf40',\n      NOTVALID: '#e45247',\n      banner: '#000e3e',\n      bannerText: '#fff',\n      bannerSeparator: '#ddd',\n      overlay: '#000',\n    },\n    speed: {\n      fast: 0.3,\n      veryFast: 0.15,\n      ultraFast: 0,\n    },\n    fontSize: {\n      small: 10,\n      medium: 14,\n      large: 16,\n      xlarge: 20,\n    },\n    fontFamily: 'Ubuntu',\n    opacity: {\n      light: 0.2,\n      medium: 0.5,\n      dark: 0.8,\n    }\n  });","import { useEffect } from \"react\";\n\nconst KEYS_LEFT = ['ArrowLeft'];\nconst KEYS_RIGHT = ['ArrowRight'];\nconst KEYS_NEXT = ['Enter'];\nexport const KEYS_OPEN_CLOSE_BANNER = [' ', 'm'];\nexport const KEYS_GET_IMAGES = ['g', 'i'];\n\n\nconst HANDLE_KEY_PRESS = (event: any, pressLeft: Function, pressRight: Function, pressNext: Function) => {\n    const keyPressed = event.key;\n    if (KEYS_LEFT.includes(keyPressed)) {\n        pressLeft();\n    } else if (KEYS_RIGHT.includes(keyPressed)) {\n        pressRight();\n    } else if (KEYS_NEXT.includes(keyPressed)) {\n        pressNext();\n    }\n}\n\ntype handleKeyPressType = (event: Event) => void\nexport const useKeyboard = (handleKeyPress: handleKeyPressType) =>\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleKeyPress);\n        return () => document.removeEventListener(\"keydown\", handleKeyPress);\n    }, [handleKeyPress]);\n\nexport default HANDLE_KEY_PRESS;\n","const getLSValue = (key: string) => localStorage.getItem(key);\nconst setLSValue = (key: string, value: string) => localStorage.setItem(key, value.trim());\n\nconst annotatorLS = 'annotator';\nexport const getAnnotator = () => getLSValue(annotatorLS);\nexport const setAnnotator = (annotator: string) => setLSValue(annotatorLS, annotator);\n\nexport const DEFAULT_IMG_PER_PAGE = 8;\nexport const OPTIONS_IMG_PER_PAGE = [\"2\", \"4\", \"6\", \"8\"];\nconst imgPerPageLS = 'imagesPerPage';\nexport const getImgPerPage = () => parseInt(getLSValue(imgPerPageLS) || \"8\");\nexport const setImgPerPage = (imgsPerPage: string) => setLSValue(imgPerPageLS, imgsPerPage);\n\nconst shaLS = 'sha_pass';\nexport const getSha = () => getLSValue(shaLS);\nexport const setSha = (password: string) => setLSValue(shaLS, password);\n\nconst datasetPathLS = 'datasetPath';\nexport const getDatasetPath = () => getLSValue(datasetPathLS);\nexport const setDatasetPath = (path: string) => setLSValue(datasetPathLS, path);\n\nconst imagesFolderLS = 'imagesFolder';\nexport const getImagesFolder = () => getLSValue(imagesFolderLS);\nexport const setImagesFolder = (path: string) => setLSValue(imagesFolderLS, path);\n\nconst masksFolderLS = 'masksFolder';\nexport const getMasksFolder = () => getLSValue(masksFolderLS);\nexport const setMasksFolder = (path: string) => setLSValue(masksFolderLS, path);\n\nconst useMasksLS = 'useMasks';\nexport const OPTIONS_USE_MASKS = ['true', 'false'];\nexport const getUseMasks = () => getLSValue(useMasksLS);\nexport const setUseMasks = (useMasks: string) => setLSValue(useMasksLS, useMasks);\n\nconst idColumnNameLS = 'idColumnName';\nexport const getIdColumnName = () => getLSValue(idColumnNameLS);\nexport const setIdColumnName = (name: string) => setLSValue(idColumnNameLS, name);\n\nconst extensionImagesLS = 'imagesExtension';\nexport const getImagesExtension = () => getLSValue(extensionImagesLS);\nexport const setImagesExtension = (ext: string) => setLSValue(extensionImagesLS, ext);\n\nconst extensionMasksLS = 'masksExtension';\nexport const getMasksExtension = () => getLSValue(extensionMasksLS);\nexport const setMasksExtension = (ext: string) => setLSValue(extensionMasksLS, ext);\n\nconst annotationUltraFastModeLS = 'annotationUltraFast';\nexport const getAnnotationUltraFastModeLS = () => getLSValue(annotationUltraFastModeLS) === 'true';\nexport const setAnnotationUltraFastModeLS = (mode: boolean) => setLSValue(annotationUltraFastModeLS, `${mode}`);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../../theme/FastDatasetCleanerTheme';\n\n\ntype Props = {\n    title: string;\n    isHidden: boolean;\n    handleClick: any;\n} & WithStylesProps;\n\nfunction Button(props: Props){\n    const { title, isHidden, handleClick, css, styles } = props;\n    \n    return (\n        <div\n            {...css(\n                styles.bannerElement,\n                isHidden && styles.bannerHidden\n            )}\n        >\n            <button type=\"button\" {...css(styles.button)} onClick={handleClick}>{title}</button>\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, fontFamily, color, speed, isNightMode }: FastDatasetCleanerThemeType) => ({\n    button: {\n        width: '100%',\n        fontFamily: fontFamily,\n        fontSize: fontSize.large,\n        fontWeight: 'bold',\n        padding: `${unit}px ${1.5 * unit}px`,\n        borderRadius: 2 * unit,\n        background: isNightMode ? color.pageNight : color.pageDay,\n        color: isNightMode ? color.pageDay : color.pageNight,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        maxHeight: fontSize.large + 0.25 * unit + 3 * unit,\n        cursor: 'pointer',\n        transition: `background ${speed.fast}s ease-in-out, color ${speed.fast}s ease-in-out`,\n    },\n    bannerElement: {\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Button);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../../theme/FastDatasetCleanerTheme';\n\n\ntype Props = {\n    text?: string;\n} & WithStylesProps;\n\nfunction TextDisplay(props: Props){\n    const { text, css, styles } = props;\n    \n    return (\n        <>\n            {text && (\n                <h3 {...css(styles.displayedText)}>{text}</h3>\n            )}\n        </>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, color }: FastDatasetCleanerThemeType) => ({\n    displayedText: {\n        color: color.bannerText,\n        textAlign: 'left',\n        fontSize: fontSize.medium,\n        marginBlockEnd: 1.5 * unit,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        'line-break': 'anywhere',\n    },\n}))(TextDisplay);\n","import React, { useState } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../../theme/FastDatasetCleanerTheme';\nimport TextDisplay from './TextDisplay';\n\n\ntype Props = {\n    title?: string;\n    isHidden: boolean;\n    value: string | null;\n    displayInputValue?: boolean;\n    onChange?: any;\n    onBlur?: any;\n} & WithStylesProps;\n\nfunction Input(props: Props){\n    const { title, isHidden, value, displayInputValue, onChange, onBlur, css, styles } = props;\n    \n    const [valueInput, setValueInput] = useState(value === null ? '' : value);\n\n    const onChangeInput = (e: any) => {\n        const inputValue = e.target.value;\n        setValueInput(inputValue);\n        if (onChange) {\n            onChange(e);\n        }\n    }\n    \n    return (\n        <div\n            {...css(\n                styles.bannerElement,\n                isHidden && styles.bannerHidden\n            )}\n        >\n            <label>\n                {title && <h3 {...css(styles.titleInput)}>{title}</h3>}\n                {displayInputValue && <TextDisplay text={valueInput} />}\n                <input\n                    type=\"text\"\n                    value={value || ''}\n                    onChange={onChangeInput}\n                    onBlur={onBlur}\n                    {...css(styles.inputArea)}\n                />\n            </label>\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, fontFamily, color, speed }: FastDatasetCleanerThemeType) => ({\n    titleInput: {\n        color: color.bannerText,\n        textAlign: 'left',\n        fontSize: fontSize.large,\n        marginBlockEnd: 1.5 * unit,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        maxHeight: fontSize.large + 0.25 * unit,\n    },\n    inputArea: {\n        width: `calc(100% - ${4 * unit}px)`,\n        fontSize: fontSize.large,\n        padding: `${0.5 * unit}px ${1.5 * unit}px`,\n        borderRadius: 1.5 * unit,\n        background: color.page,\n        color: color.reversePage,\n        fontFamily: fontFamily,\n        transition: `background ${speed.fast}s ease-in-out,\n                    color ${speed.fast}s ease-in-out,\n                    box-shadow ${speed.fast}s ease-in-out`,\n\n        ':focus': {\n            boxShadow: `0 0 ${unit}px 0 ${color.bannerText}`,\n        }\n    },\n    bannerElement: {\n        margin: `${unit}px 0`,\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Input);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../../theme/FastDatasetCleanerTheme';\n\ntype Props = {\n    thin?: boolean;\n} & WithStylesProps;\n\nconst Separator = ({ thin, css, styles }: Props) => <div {...css(styles.separator, thin && styles.thinSeparator)}></div>;\n\nexport default withStyles(({ unit, color }: FastDatasetCleanerThemeType) => ({\n    separator: {\n        width: '100%',\n        margin: `${3 * unit}px 0`,\n        borderRadius: 3 * unit,\n        height: 0.25 * unit,\n        background: color.bannerSeparator,\n    },\n    thinSeparator: {\n        height: 0.125 * unit,\n        margin: `${2.5 * unit}px 0 ${2 * unit}px 0`,\n    },\n}))(Separator);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../../theme/FastDatasetCleanerTheme';\nimport Separator from './Separator';\n\n\ntype Props = {\n    title: string;\n    isHidden: boolean;\n    children: React.ReactNode;\n} & WithStylesProps;\n\nfunction Section(props: Props){\n    const { title, isHidden, children, css, styles } = props;\n        \n    return (\n        <div\n            {...css(\n                styles.bannerElement,\n                isHidden && styles.bannerHidden\n            )}\n        >\n            {title && <h2 {...css(styles.titleSection)}>{title}</h2>}\n            {children}\n            <Separator thin />\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, color, speed }: FastDatasetCleanerThemeType) => ({\n    titleSection: {\n        color: color.bannerText,\n        textAlign: 'center',\n        fontSize: fontSize.xlarge,\n        marginBlockEnd: 1.5 * unit,\n        marginBlockStart: 0.5 * unit,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    bannerElement: {\n        margin: `0 0 ${unit}px 0`,\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Section);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../../theme/FastDatasetCleanerTheme';\n\n\ntype Props = {\n    title: string;\n    name: string;\n    isHidden: boolean;\n    value: string | null;\n    options: string[];\n    onChange?: any;\n} & WithStylesProps;\n\nfunction Select(props: Props){\n    const { title, name, isHidden, value, options, onChange, css, styles } = props;\n    \n    return (\n        <div\n            {...css(\n                styles.bannerElement,\n                isHidden && styles.bannerHidden\n            )}\n        >\n            <label>\n                <h3 {...css(styles.titleInput)}>{title}</h3>\n                <select name={name} value={value || ''} onChange={onChange} {...css(styles.select)}>\n                    {options.map(option => <option key={option} value={option}>{option}</option>)}\n                </select>\n            </label>\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, fontFamily, color, speed }: FastDatasetCleanerThemeType) => ({\n    titleInput: {\n        color: color.bannerText,\n        textAlign: 'left',\n        fontSize: fontSize.large,\n        marginBlockEnd: 1.5 * unit,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        maxHeight: fontSize.large + 0.25 * unit,\n    },\n    select: {\n        width: `100%`,\n        fontSize: fontSize.large,\n        height: fontSize.large + 2 * unit,\n        padding: `${0.5 * unit}px ${1.5 * unit}px`,\n        borderRadius: 1.5 * unit,\n        background: color.page,\n        color: color.reversePage,\n        fontFamily: fontFamily,\n        transition: `background ${speed.fast}s ease-in-out,\n                    color ${speed.fast}s ease-in-out,\n                    box-shadow ${speed.fast}s ease-in-out`,\n\n        ':focus': {\n            boxShadow: `0 0 ${unit}px 0 ${color.bannerText}`,\n        }\n    },\n    bannerElement: {\n        margin: `${unit}px 0`,\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Select);\n","import React, { useState } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../../theme/FastDatasetCleanerTheme';\n\ntype Props = {\n    value: boolean;\n    stateTrue: string;\n    stateFalse: string;\n    isHidden: boolean;\n    handleClick: (e: any) => void;\n} & WithStylesProps;\n\nconst Switch = (props: Props) => {\n    const { value, stateFalse, stateTrue, isHidden, handleClick, css, styles } = props;\n    const [checked, setChecked] = useState(value);\n\n    const handleChangeToggle = () => {\n        const newChecked = !checked;\n        setChecked(newChecked);\n        handleClick(newChecked);\n    }\n\n    return (\n        <label {...css(styles.switchArea, isHidden && styles.bannerHidden)}>\n            <h4 {...css(styles.switchLegend)}>{stateFalse}</h4>\n            <div {...css(styles.switch, checked && styles.switchChecked)}>\n                <input type=\"checkbox\" onClick={handleChangeToggle} {...css(styles.switchInput)} />\n                <span {...css(styles.roundSlider, checked && styles.roundSliderChecked)}></span>\n            </div>\n            <h4 {...css(styles.switchLegend)}>{stateTrue}</h4>\n        </label>\n    );\n}\n\nconst unit = 8;\nconst switchWidth = 7 * unit;\nconst switchHeight = 4 * unit;\nconst switchPadding = 0.5 * unit;\nconst switchDiscSize = switchHeight - 2 * switchPadding;\nexport default withStyles(({ fontSize, color, speed }: FastDatasetCleanerThemeType) => ({\n    switch: {\n        position: 'relative',\n        display: 'inline-block',\n        width: switchWidth,\n        height: switchHeight,\n        backgroundColor: color.bannerSeparator,\n        borderRadius: switchHeight,\n        margin: `${0.5 * unit}px ${1.5 * unit}px`,\n        transition: `background-color ${speed.fast}s ease-in-out`,\n    },\n    switchChecked: {\n        backgroundColor: color.FAST_DATASET_CLEANER_LIGHT,\n    },\n    switchInput: {\n        opacity: 0,\n        width: 0,\n        height: 0,\n    },\n    roundSlider: {\n        position: 'absolute',\n        top: switchPadding,\n        right: 0,\n        transition: `transform ${speed.fast}s ease-in-out`,\n        borderRadius: switchHeight,\n\n        content: \"\",\n        height: switchDiscSize,\n        width: switchDiscSize,\n        left: switchPadding,\n        bottom: switchPadding,\n        backgroundColor: 'white',\n    },\n    roundSliderChecked: {\n        transform: `translateX(${switchWidth - switchDiscSize - 2 * switchPadding}px)`,\n    },\n    switchArea: {\n        cursor: 'pointer',\n    },\n    switchLegend: {\n        position: 'relative',\n        display: 'inline-block',\n        fontSize: fontSize.medium,\n        top: 0.75 * unit,\n        margin: 0,\n        color: color.pageDay,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Switch);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../theme/FastDatasetCleanerTheme';\nimport {\n    getAnnotator,\n    getImgPerPage,\n    getSha,\n    setAnnotator,\n    setImgPerPage,\n    setSha,\n    DEFAULT_IMG_PER_PAGE,\n    OPTIONS_IMG_PER_PAGE,\n    getDatasetPath,\n    setDatasetPath,\n    setImagesFolder,\n    setMasksFolder,\n    getImagesFolder,\n    getMasksFolder,\n    OPTIONS_USE_MASKS,\n    setUseMasks,\n    getUseMasks,\n    getIdColumnName,\n    setIdColumnName,\n    setImagesExtension,\n    getImagesExtension,\n    getMasksExtension,\n    setMasksExtension,\n    setAnnotationUltraFastModeLS,\n    getAnnotationUltraFastModeLS\n} from '../services/LocalStorage';\nimport { updateUrl, UrlArgs } from '../services/Location';\nimport Button from './elements/Button';\nimport Input from './elements/Input';\nimport Section from './elements/Section';\nimport Select from './elements/Select';\nimport Separator from './elements/Separator';\nimport Switch from './elements/Switch';\nimport TextDisplay from './elements/TextDisplay';\n\n\nconst FOLDER_PLACEHOLDER = '/path/to/folder/';\nexport const handleClickGetImages = () => window.location.reload(false);\n\ntype Props = {\n    isClicked: boolean;\n} & WithStylesProps;\n\n\nfunction Banner(props: Props){\n    const { isClicked, css, styles } = props;\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    const urlCsvPath = params.get(UrlArgs.CSV_PATH);\n    const urlImagesPerPage = params.get(UrlArgs.IMAGES_PER_PAGE);\n    const urlPassword = params.get(UrlArgs.PASSWORD);\n    const urlImagesFolder = params.get(UrlArgs.IMAGES_FOLDER);\n    const urlMasksFolder = params.get(UrlArgs.MASKS_FOLDER);\n    const urlUseMasks = params.get(UrlArgs.USE_MASKS);\n    const urlIdColumn = params.get(UrlArgs.ID_COLUMN);\n    const urlImagesExtension = params.get(UrlArgs.IMAGES_EXTENSION);\n    const urlMasksExtension = params.get(UrlArgs.MASKS_EXTENSION);\n    \n    const [annot, setAnnot] = useState(getAnnotator() || '');\n    const [csv, setCsv] = useState(urlCsvPath || getDatasetPath() || '');\n    const [imagesPerPage, setImagesPerPage] = useState(urlImagesPerPage || getImgPerPage() || DEFAULT_IMG_PER_PAGE);\n    const [shaPass, setShaPass] = useState(urlPassword || getSha() || '');\n    const [imgFold, setImgFold] = useState(urlImagesFolder || getImagesFolder() || '');\n    const [maskFold, setMaskFold] = useState(urlMasksFolder || getMasksFolder() || '');\n    const [useMasks, setUseMasksValue] = useState(urlUseMasks || getUseMasks() || 'false');\n    const [idColumn, setIdColumn] = useState(urlIdColumn || getIdColumnName() || 'id');\n    const [imgExt, setImgExt] = useState(urlImagesExtension || getImagesExtension() || '');\n    const [masksExt, setMasksExt] = useState(urlMasksExtension || getMasksExtension() || '');\n    const [annotationUltraFastMode, setAnnotationUltraFastMode] = useState(getAnnotationUltraFastModeLS() || false);\n    \n    useEffect(() => {\n        if (!getIdColumnName()) {\n            setIdColumnName('id');\n        }\n    }, []);\n\n    const handleChangeAnnotator = (e: any) => {\n        const annotator = e.target.value;\n        setAnnotator(annotator);\n        setAnnot(annotator);\n    };\n\n    const handleChangeImgPerPage = (e: any) => {\n        const imgPerPage = e.target.value;\n        setImgPerPage(imgPerPage);\n        setImagesPerPage(imgPerPage);\n        updateUrl();\n    };\n    \n    const handleChangeCsv = (e: any) => {\n        const csvPath = e.target.value;\n        setDatasetPath(csvPath);\n        setCsv(csvPath);\n        updateUrl();\n    };\n    \n    const handleChangeSha = (e: any) => {\n        const password = e.target.value;\n        setShaPass(password);\n        setSha(password);\n        updateUrl();\n    };\n\n    const handleChangeImagesFolder = (e: any) => {\n        const folder = e.target.value;\n        setImagesFolder(folder);\n        setImgFold(folder);\n        updateUrl();\n    };\n\n    const handleChangeMasksFolder = (e: any) => {\n        const folder = e.target.value;\n        setMasksFolder(folder);\n        setMaskFold(folder);\n        updateUrl();\n    };\n\n    const handleChangeUseMasks = (e: any) => {\n        const useMasksValue = e.target.value;\n        setUseMasksValue(useMasksValue);\n        setUseMasks(useMasksValue);\n        updateUrl();\n    };\n\n    const handleChangeIdColumnName = (e: any) => {\n        const name = e.target.value;\n        setIdColumn(name);\n        setIdColumnName(name);\n        updateUrl();\n    };\n\n    const handleChangeImagesExtension = (e: any) => {\n        const extension = e.target.value;\n        setImgExt(extension);\n        setImagesExtension(extension);\n        updateUrl();\n    };\n\n    const handleChangeMasksExtension = (e: any) => {\n        const extension = e.target.value;\n        setMasksExt(extension);\n        setMasksExtension(extension);\n        updateUrl();\n    };\n\n    const handleChangeAnnotationMode = (mode: boolean) => {\n        setAnnotationUltraFastMode(mode);\n        setAnnotationUltraFastModeLS(mode);\n    }\n\n    const InputBanner = useCallback((props: any) => <Input isHidden={!isClicked} {...props} />, [isClicked]);\n    const SelectBanner = useCallback((props: any) => <Select isHidden={!isClicked} {...props} />, [isClicked]);\n    const SwitchBanner = useCallback((props: any) => <Switch isHidden={!isClicked} {...props} />, [isClicked]);\n    const SectionBanner = useCallback((props: any) => <Section isHidden={!isClicked} {...props} />, [isClicked]);\n    const ButtonBanner = useCallback((props: any) => <Button isHidden={!isClicked} {...props} />, [isClicked]);\n\n    return (\n        <div\n            {...css(\n                styles.bannerContent,\n                isClicked && styles.bannerOpen\n            )}\n        >\n            {isClicked && <Separator />}\n            <SectionBanner title=\"Password\">\n                <InputBanner\n                    value={shaPass}\n                    onChange={handleChangeSha}\n                />\n            </SectionBanner>\n            <SectionBanner title=\"About the CSV\">\n                <InputBanner\n                    displayInputValue\n                    title=\"CSV path\"\n                    value={csv}\n                    onChange={handleChangeCsv}\n                />\n                <InputBanner\n                    title=\"Name of the id column\"\n                    value={idColumn}\n                    onChange={handleChangeIdColumnName}\n                />\n            </SectionBanner>\n            <SectionBanner title=\"Images\">\n                <TextDisplay text={`${imgFold || FOLDER_PLACEHOLDER}{id}${imgExt}`} />\n                <InputBanner\n                    title=\"Images folder\"\n                    value={imgFold}\n                    onChange={handleChangeImagesFolder}\n                />\n                <InputBanner\n                    title=\"Images extension\"\n                    value={imgExt}\n                    onChange={handleChangeImagesExtension}\n                />\n            </SectionBanner>\n            <SectionBanner title=\"Masks\">\n                <SelectBanner\n                    title=\"Use masks\"\n                    name=\"use_masks\"\n                    value={useMasks}\n                    options={OPTIONS_USE_MASKS}\n                    onChange={handleChangeUseMasks}\n                />\n                {useMasks === 'true' && (\n                    <>\n                        <TextDisplay text={`${maskFold || FOLDER_PLACEHOLDER}{id}${masksExt}`} />\n                        <InputBanner\n                            title=\"Masks folder\"\n                            value={maskFold}\n                            onChange={handleChangeMasksFolder}\n                        />\n                        <InputBanner\n                            title=\"Masks extension\"\n                            value={masksExt}\n                            onChange={handleChangeMasksExtension}\n                        />\n                    </>\n                )}\n            </SectionBanner>\n            <SectionBanner title=\"Annotation\">\n                <InputBanner\n                    title=\"Annotator\"\n                    value={annot}\n                    onChange={handleChangeAnnotator}\n                />\n                <SelectBanner\n                    title=\"Images per page\"\n                    name=\"img_per_page\"\n                    value={imagesPerPage.toString()}\n                    options={OPTIONS_IMG_PER_PAGE}\n                    onChange={handleChangeImgPerPage}\n                />\n                <SwitchBanner\n                    value={annotationUltraFastMode}\n                    stateFalse=\"Fast mode\"\n                    stateTrue=\"Ludicrous mode\"\n                    handleClick={handleChangeAnnotationMode} />\n            </SectionBanner>\n            <ButtonBanner title=\"Get images\" handleClick={handleClickGetImages} />\n        </div>\n    );\n}\n\nconst unit = 8;\nconst bannerContentSideMargin = 3 * unit;\nexport default withStyles(({ unit, speed }: FastDatasetCleanerThemeType) => ({\n    bannerContent: {\n        width: 0,\n        margin: bannerContentSideMargin,\n        marginTop : 19 * unit,\n        zIndex: 2,\n        overflowY: 'auto',\n        maxHeight: '85vh',\n        transition: `width ${speed.fast}s ease-in-out`,\n    },\n    bannerOpen: {\n        width: `calc(100% - 2 * ${bannerContentSideMargin}px)`,\n    },\n}))(Banner);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../../theme/FastDatasetCleanerTheme';\n\ntype Props = {\n    zIndex?: number;\n    isVisible: boolean;\n    handleClick?: () => void;\n} & WithStylesProps;\n\nfunction Overlay(props: Props){\n    const { zIndex, isVisible, handleClick, css, styles } = props;\n    \n    return (\n        <div\n            onClick={handleClick}\n            style={{zIndex: zIndex || 1}}\n            {...css(isVisible ? styles.overlay : styles.overlayHidden)} \n        ></div>\n    );\n}\n\nexport default withStyles(({ opacity, color, speed }: FastDatasetCleanerThemeType) => ({\n    overlay: {\n        width: '100vw',\n        height: '100vh',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        background: color.overlay,\n        opacity: opacity.dark,\n        transition: `opacity ${speed.fast}s ease-in-out`,\n\n        ':hover': {\n            cursor: 'pointer',\n        },\n    },\n    overlayHidden: {\n        opacity: 0,\n    },\n}))(Overlay);\n","import React, { useEffect } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport MenuLogo from './menu_logo.png';\nimport { FastDatasetCleanerThemeType } from '../theme/FastDatasetCleanerTheme';\nimport BannerContent, { handleClickGetImages } from './BannerContent';\nimport Overlay from './elements/Overlay';\nimport Button from './elements/Button';\nimport { KEYS_OPEN_CLOSE_BANNER, KEYS_GET_IMAGES } from '../services/Keyboard';\n\nconst noop = () => {};\nconst INPUT_TAGS = ['input', 'select', 'button', 'textarea'];\n\ntype Props = {\n    isBannerOpen: boolean;\n    handleBanner: Function;\n    nightMode: boolean;\n    changeNightMode: any;\n} & WithStylesProps;\n\nfunction Banner(props: Props){\n    const { isBannerOpen, handleBanner, nightMode, changeNightMode, css, styles } = props;\n\n    useEffect(() => {\n        const handleKeyPress = (event: any) => {\n            const keyPressed = event.key;\n            const noActiveInputTag = document.activeElement && INPUT_TAGS.indexOf(document.activeElement.tagName.toLowerCase()) === -1;\n            if (noActiveInputTag && KEYS_OPEN_CLOSE_BANNER.includes(keyPressed)) {\n                handleBanner(!isBannerOpen);\n            } else if (noActiveInputTag && isBannerOpen && KEYS_GET_IMAGES.includes(keyPressed)) {\n                handleClickGetImages();\n            }\n        }\n    \n        document.addEventListener(\"keydown\", handleKeyPress);\n        return () => document.removeEventListener(\"keydown\", handleKeyPress);\n    }, [isBannerOpen, handleBanner]);\n\n    const onClickCard = () => {\n        handleBanner(!isBannerOpen);\n    }\n\n    const onClickOverlay = () => {\n        handleBanner(false);\n    }\n\n    const titleDayNightMode = nightMode ? \"Night mode\" : \"Day mode\";\n    \n    return (\n        <>\n            <div\n                onClick={!isBannerOpen ? onClickCard : noop}\n                {...css(\n                    styles.banner,\n                    isBannerOpen && styles.bannerOpen\n                )}\n            >\n                <img\n                    src={MenuLogo}\n                    alt=\"Logo\"\n                    onClick={onClickCard}\n                    {...css(\n                        styles.logo,\n                        isBannerOpen ? styles.logoClicked : styles.logoNotClicked\n                    )}\n                />\n                <div {...css(styles.nightButton, !isBannerOpen && styles.nightButtonHidden)}>\n                    <Button title={titleDayNightMode} isHidden={!isBannerOpen} handleClick={changeNightMode} />\n                </div>\n\n                <BannerContent isClicked={isBannerOpen} />\n            </div>\n            <Overlay isVisible={isBannerOpen} handleClick={onClickOverlay} />\n        </>\n    );\n}\n\nconst unit = 8;\nconst closeLogoSize = 8 * unit;\nconst openLogoSize = 12 * unit;\nexport const closeBannerWidth = 11 * unit;\nconst openBannerWidth = 42 * unit;\nexport default withStyles(({ unit, color, speed }: FastDatasetCleanerThemeType) => ({\n    banner: {\n        width: closeBannerWidth,\n        height: '100vh',\n        background: color.banner,\n        boxShadow: '0px 0px 20px 0px #000',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        zIndex: 2,\n        cursor: 'pointer',\n        transition: `width ${speed.fast}s ease-in-out`,\n    },\n    bannerOpen: {\n        width: openBannerWidth,\n        cursor: 'default',\n    },\n    logoClicked: {\n        transform: 'rotate(720deg)',\n        height: openLogoSize,\n        left: 3 * unit,\n        top: 3 * unit,\n    },\n    logoNotClicked: {\n        transform: 'rotate(0deg)',\n    },\n    logo: {\n        position: 'fixed',\n        top: 2 * unit,\n        left: unit,\n        height: closeLogoSize,\n        cursor: 'pointer',\n        transition: `transform ${speed.fast}s ease-in-out, height ${speed.fast}s ease-in-out, left ${speed.fast}s ease-in-out, top ${speed.fast}s ease-in-out`,\n    },\n    nightButton: {\n        position: 'fixed',\n        left: 6 * unit + openLogoSize,\n        top: openLogoSize - unit,\n        width: `calc(${openBannerWidth - openLogoSize - 6 * unit - 5 * unit}px)`,\n        padding: `0 ${unit}px`,\n        opacity: 1,\n        transition: `opacity ${0.5 * speed.fast}s ease-in-out, width ${speed.fast - 0.05}s ease-in-out 0.05s, left ${speed.fast}s ease-in-out`,\n    },\n    nightButtonHidden: {\n        left: 4 * unit + closeLogoSize,\n        width: `calc(${closeBannerWidth - closeLogoSize - 4 * unit - 5 * unit}px * 0.75)`,\n        opacity: 0,\n    },\n}))(Banner);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport {useTransition, animated} from 'react-spring'\n\nimport { FastDatasetCleanerThemeType } from '../theme/FastDatasetCleanerTheme';\nimport { SampleType } from '../types/Annotation';\nimport { useKeyboard } from '../services/Keyboard';\nimport { getImgPerPage, getAnnotationUltraFastModeLS } from '../services/LocalStorage';\nimport FetchService from '../services/Fetch';\nimport { closeBannerWidth } from './Banner';\n\n\ntype Props = {\n    sample: SampleType;\n    isBannerOpen: boolean;\n    navigationDirection: string;\n    fetchService: FetchService;\n    handleChangeValue: Function;\n} & WithStylesProps;\n\nfunction Sample(props: Props){\n    const { isBannerOpen, sample, navigationDirection, fetchService, handleChangeValue, css, styles } = props;\n    const { id, value, sampleNumber, annotated, changing, name } = sample;\n\n    const [isValid, setIsValid] = useState(value);\n\n    const ultraFastMode = getAnnotationUltraFastModeLS();\n\n    useEffect(() => setIsValid(value), [value]);\n\n    const [inView, setInView] = useState(false)\n    useEffect(() => {\n        setInView(true)\n        return () => setInView(false);\n    }, []);\n\n    const toggleValue = useCallback(() => {\n        handleChangeValue(!isValid, sampleNumber);\n        setIsValid(!isValid);\n    }, [isValid, sampleNumber, handleChangeValue]);\n\n    const handleKeyPress = useCallback((event: any) => {\n        const keyPressed = event.key;\n        if (parseInt(keyPressed) === id && !isBannerOpen) {\n            toggleValue();\n        }\n    }, [id, isBannerOpen, toggleValue]);\n\n    useKeyboard(handleKeyPress);\n\n    const unit = 8;\n    const cardStyle = {\n        maxWidth: '45vw',\n        width: `calc((100vw - ${closeBannerWidth}px) / 2 - ${10 * unit}px)`,\n        display: 'inline-block',\n    };\n    const translationInOut = `translateX(${navigationDirection === 'left' ? '-' : ''}100vw)`;\n\n    const content = {\n        from: { opacity: 0, transform: translationInOut, ...cardStyle },\n        enter: { opacity: 1, transform: 'translateX(0)', ...cardStyle },\n        leave: { opacity: 0, transform: translationInOut, ...cardStyle },\n    };\n\n    const transitions = useTransition(inView, null, content)\n    \n    return (\n        <>\n            {transitions.map(({ item, key, props: propsBis}) =>\n                item && <animated.div key={key} style={propsBis}>\n                    <div\n                        onClick={toggleValue}\n                        onKeyDown={handleKeyPress}\n                        {...css(\n                            styles.card,\n                            ultraFastMode && styles.cardUltraFast,\n                            isValid ? styles.cardValid : styles.cardNotValid,\n                            annotated && !changing && styles.cardAnnotated,\n                            ultraFastMode && !isValid && styles.cardNotValidUltraFast,\n                        )}\n                    >    \n                        <div {...css(styles.idCard)}>\n                            <div {...css(styles.id)}>{id}</div>\n                            {annotated && <div {...css(styles.annotated)}>{isValid ? '✔' : '✘'}</div>}\n                        </div>\n                        <img src={fetchService.getImage(name)} alt=\"source\" {...css(styles.image)} />\n                    </div>\n                </animated.div>\n                )\n            }\n        </>\n    );\n}\n\n\nconst unit = 8;\nexport const cardWidth = 95 * unit;\nconst maxHeightCardContent = `calc(100vh / ${getImgPerPage() / 2} - ${2 * unit}px)`;\nexport default withStyles(({ unit, color, speed, fontSize }: FastDatasetCleanerThemeType) => ({\n    card: {\n        maxHeight: `calc(100vh / ${getImgPerPage() / 2})`,\n        border: '1px solid #ccc',\n        borderRadius: 3 * unit,\n        margin: `${0.5 * unit}px ${1 * unit}px`,\n        height: `calc(100% - 2 * ${0.75 * unit}px)`,\n        minHeight: `calc((100vh - ${4 * unit + 2 * unit}px) / ${getImgPerPage() / 2} - ${1 * unit}px)`,\n        transition:\n            `background ${speed.fast}s ease,\n            box-shadow ${speed.fast}s ease,\n            transform ${speed.fast}s ease,\n            opacity ${speed.fast}s ease`,\n        overflow: 'hidden',\n        cursor: 'pointer',\n        ':hover': {\n            boxShadow: `0 0 ${2.5 * unit}px 0 #000`,\n        }\n    },\n    cardUltraFast: {\n        transition:\n            `background ${speed.ultraFast}s ease,\n            box-shadow ${speed.ultraFast}s ease,\n            transform ${speed.ultraFast}s ease,\n            opacity ${speed.ultraFast}s ease`,\n    },\n    cardValid: {\n        background: color.VALID,\n    },\n    cardNotValid: {\n        background: color.NOTVALID,\n    },\n    cardNotValidUltraFast: {\n        opacity: 0.05,\n    },\n    annotated: {\n        marginTop: unit,\n        fontSize: fontSize.large,\n    },\n    cardAnnotated: {\n        opacity: 0.5,\n    },\n    idCard: {\n        fontWeight: 'bold',\n        position: 'absolute',\n        width: 5 * unit,\n        borderRight: '1px solid #ccc',\n        height: '100%',\n        maxHeight: maxHeightCardContent,\n    },\n    id: {\n        marginTop: 1.5 * unit,\n    },\n    image: {\n        height: '100%',\n        marginLeft: 5 * unit,\n        maxHeight: maxHeightCardContent,\n        maxWidth: `calc(100% - ${5 * unit + 2 * unit}px)`,\n    },\n}))(Sample);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../theme/FastDatasetCleanerTheme';\nimport Sample from './Sample';\nimport { SampleType } from '../types/Annotation';\nimport FetchService from '../services/Fetch';\nimport { closeBannerWidth } from './Banner';\n\ntype Props = {\n    images: SampleType[];\n    isBannerOpen: boolean;\n    fetchService: FetchService;\n    navigationDirection: string;\n    handleChangeValue: Function;\n} & WithStylesProps;\n\nfunction SampleAnnotation(props: Props) {\n    const { isBannerOpen, images, fetchService, navigationDirection, handleChangeValue, css, styles } = props;\n\n    return (\n        <div {...css(styles.mainColumn)}>\n            {images.map(\n                (sample: SampleType) => \n                    <Sample\n                        sample={sample}\n                        isBannerOpen={isBannerOpen}\n                        handleChangeValue={handleChangeValue}\n                        navigationDirection={navigationDirection}\n                        fetchService={fetchService}\n                        key={sample.name}\n                    />\n            )}\n        </div>\n    );\n}\n\nconst unit = 8;\nexport const mainColumnHeight = `calc(100vh - 2 * ${unit}px)`;\nexport default withStyles(({ color, unit, speed }: FastDatasetCleanerThemeType) => ({\n    mainColumn: {\n        background: color.page,\n        marginLeft: closeBannerWidth + 2 * unit,\n        marginRight: 0,\n        paddingTop: unit,\n        paddingBottom: unit,\n        display: 'flex',\n        flexWrap: 'wrap',\n        height: mainColumnHeight,\n        transition: `background ${speed.fast}s ease-in-out`,\n    },\n}))(SampleAnnotation);\n","export enum GetImageArgs {\n    ID = 'id',\n    PASSWORD = 'sha',\n};\n","export default {\n    getAnnotations: 'get-annotations',\n    getImage: 'get-image',\n    annotate: 'annotate',\n};","import { getSha } from \"./LocalStorage\";\n\nconst HEADERS_POST = {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n};\n\nexport const makeBody = (json: Object) => ({\n    method: \"POST\",\n    headers: HEADERS_POST,\n    body: JSON.stringify({ sha: getSha(), ...json }),\n});","import { GetAnnotationsResponse, ImageAnnotation } from \"../types/Response\";\nimport { SampleType } from \"../types/Annotation\";\nimport Api from \"./Api\";\nimport { makeBody } from \"./FetchUtils\";\nimport { getImgPerPage, getSha, getAnnotator, getDatasetPath, getImagesFolder, getMasksFolder, getUseMasks, getIdColumnName, getImagesExtension, getMasksExtension } from \"./LocalStorage\";\nimport { GetImageArgs } from \"./Arguments\";\n\n\nconst formatImage = (image: ImageAnnotation) => ({\n  id: image.index%getImgPerPage() + 1,\n  sampleNumber: image.index,\n  value: typeof(image.value) == \"string\" ? true : image.value,\n  name: image.id,\n  annotated: image.value !== \"None\",\n  changing: false,\n});\n\n\nconst formatImages = (images: ImageAnnotation[]) => {\n  return images.map(image => formatImage(image));\n}\n\ntype Props = {\n    api_address: string;\n    page?: number;\n    images?: ImageAnnotation[];\n    totalImages?: number;\n    processedImages?: number;\n};\n\nclass FetchService {\n    api_address: string;\n    page: number;\n    images: ImageAnnotation[];\n    totalImages: number;\n    processedImages: number;\n    samples?: SampleType[];\n    firstLoading = true;\n\n    constructor(props: Props) {\n        this.api_address = props.api_address;\n        this.page = props.page || 0;\n        this.images = props.images || [];\n        this.totalImages = props.totalImages || 0;\n        this.processedImages = props.processedImages || 0;\n        this.samples = (props.images && formatImages(props.images)) || [];\n    }\n\n    getSample = () => this.samples || [];\n\n    getProgress = () => ({ currentPage: this.page, numberImagesPerPage: getImgPerPage(), totalImages: this.totalImages });\n\n    changePage = (condition: boolean, newPage: number) => {\n      if (condition) {\n        this.page = newPage;\n        return this.getAnnotations();\n      }\n      return new Promise(() => {});\n    }\n\n    incrPage = () => {\n      const condition = this.page * getImgPerPage() <= this.totalImages;\n      return this.changePage(condition, this.page + 1);\n    }\n\n    decrPage = () => {\n      const condition = this.page > 0;\n      return this.changePage(condition, this.page - 1);\n    }\n\n    nextPage = () => {\n      this.annotate();\n      const condition = this.page * getImgPerPage() <= this.totalImages;\n      return this.changePage(condition, this.page + 1);\n    }\n\n    setValue = (value: boolean, sampleNumber: number) => {\n      this.samples = this.samples && this.samples.map((sample: SampleType) => {\n        if (sample.sampleNumber === sampleNumber) {\n          const newSample = sample;\n          sample.value = value;\n          sample.changing = !sample.changing;\n          return newSample;\n        }\n        return sample;\n      });\n    }\n\n\n    treatNewData(data: GetAnnotationsResponse) {\n      const { images, total, processed } = data;\n      if (images && total && processed !== undefined) {\n        this.images = images;\n        this.totalImages = total;\n        this.processedImages = processed;\n        if (processed < total) {\n          this.page = images.length !== 0 ? (images[0].index / getImgPerPage()) : this.page;\n        } else {\n          const lastPage = Math.ceil((total - 1) / getImgPerPage());\n          this.page = (images.length !== 0) ? this.page : lastPage;\n        }\n        this.samples = formatImages(images);\n      }\n    }\n\n\n    get = async (endpoint: string) =>\n      fetch(`${this.api_address}${endpoint}`).then(res => res.json());\n\n    post = async (endpoint: string, json: any) =>\n      fetch(`${this.api_address}${endpoint}`, makeBody(json)).then(res => res.json());\n\n\n    getAnnotations = async () => {\n      const first = this.firstLoading ? -1 : this.page * getImgPerPage();\n\n      const json = {\n        \"first\": first,\n        \"offset\": getImgPerPage(),\n        \"sha\": getSha(),\n        \"csv_path\": getDatasetPath(),\n        \"images_folder\": getImagesFolder(),\n        \"masks_folder\": getMasksFolder(),\n        \"with_masks\": getUseMasks() === 'true',\n        \"id_column_name\": getIdColumnName(),\n        \"image_ext\": getImagesExtension(),\n        \"mask_ext\": getMasksExtension(),\n      };\n\n      return this.post(`${Api.getAnnotations}`, json)\n        .then((data: GetAnnotationsResponse) => {\n          if (data.error) {\n            alert(data.error);\n          } else {\n            if (this.firstLoading) {\n              this.firstLoading = false;\n            }\n            this.treatNewData(data);\n          }\n        });\n    }\n\n    getImage = (imageId: string) =>\n      `${this.api_address}${Api.getImage}?${GetImageArgs.ID}=${imageId}&${GetImageArgs.PASSWORD}=${getSha()}`;\n\n\n    annotate = async () => {\n      const annotations: { [key:string]: any} = {};\n      this.samples?.map(sample => annotations[sample.name] = sample.value);\n\n      const json = {\n        \"annotator\": getAnnotator(),\n        \"annotations\": annotations,\n        \"sha\": getSha(),\n      };\n\n      this.post(Api.annotate, json)\n        .then(_ => {});\n    }\n}\n\nexport default FetchService;\n","import { useEffect } from \"react\";\nimport { throttle } from \"lodash\";\n\nconst THRESHOLD_X = 10;\nconst THRESHOLD_Y = 5;\nconst THROTTLE_WAIT = 320;\n\nconst HANDLE_HORIZONTAL_WHEEL = (e: Event, wheelLeft: Function, wheelRight: Function) => {\n    // @ts-ignore\n    const { deltaX, deltaY } = e;\n    // @ts-ignore\n    const isPageZoomed = window.visualViewport.scale !== 1;\n    if (!isPageZoomed && Math.abs(deltaX) > THRESHOLD_X && Math.abs(deltaY) <= THRESHOLD_Y) {\n        deltaX > 0 ? wheelRight() : wheelLeft();\n    }\n}\n\ntype handleHorizontalWheelType = (event: Event) => void;\nexport const useHorizontalWheel = (handleHorizontalWheel: handleHorizontalWheelType) => \n    useEffect(() => {\n        const throttled = throttle(handleHorizontalWheel, THROTTLE_WAIT);\n\n        window.addEventListener(\"wheel\", throttled);\n        return () => window.removeEventListener(\"wheel\", throttled);\n    }, [handleHorizontalWheel]);\n\nexport default HANDLE_HORIZONTAL_WHEEL;","import React, { useState, useEffect } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport {useTransition, animated} from 'react-spring'\n\nimport { FastDatasetCleanerThemeType } from '../theme/FastDatasetCleanerTheme';\nimport Button from './elements/Button';\n\n\nconst design = \n\"─────────────────╔╗───╔╗───╔╗──────────╔╗\\n\" +\n\"────────────────╔╝╚╗──║║──╔╝╚╗─────────║║\\n\" +\n\"╔══╦══╦═╗╔══╦═╦═╩╗╔╬╗╔╣║╔═╩╗╔╬╦══╦═╗╔══╣║\\n\" +\n\"║╔═╣╔╗║╔╗╣╔╗║╔╣╔╗║║║║║║║║╔╗║║╠╣╔╗║╔╗╣══╬╝\\n\" +\n\"║╚═╣╚╝║║║║╚╝║║║╔╗║╚╣╚╝║╚╣╔╗║╚╣║╚╝║║║╠══╠╗\\n\" +\n\"╚══╩══╩╝╚╩═╗╠╝╚╝╚╩═╩══╩═╩╝╚╩═╩╩══╩╝╚╩══╩╝\\n\" +\n\"─────────╔═╝║────────────────────────────\\n\" +\n\"─────────╚══╝────────────────────────────\";\n\nconst text =\n\"🎊🎉👏 Congratulations! 👏🎉🎊 \\n\\n\" +\n\"You reached the end of your dataset!\\n\\n\" +\n\"Refresh the page to be sure that you annotated all the images.\\n\\n\" +\n\" If after a refresh you get here, you're good to go on ! 🏋💻\";\n\n\ntype Props = {\n    navigationDirection: string;\n} & WithStylesProps;\n\nconst handleClickButton = () => window.location.reload(false);\nconst Screen = ({ css, styles }: WithStylesProps) => (\n    <div {...css(styles.card)}>\n        <p {...css(styles.paragraph)}>{design}</p>\n        <p>{text}</p>\n        <div {...css(styles.reloadButton)}>\n            <Button title=\"Reload the page\" isHidden={false} handleClick={handleClickButton} />\n        </div>\n    </div>\n);\n\n\nfunction FinalScreen(props: Props){\n    const { navigationDirection } = props;\n\n    const [inView, setInView] = useState(false)\n    useEffect(() => {\n        setInView(true)\n        return () => setInView(false);\n    }, []);\n\n\n    const translationInOut = `translateX(${navigationDirection === 'left' ? '-' : ''}100vw)`;\n    const content = {\n        from: { opacity: 0, transform: translationInOut },\n        enter: { opacity: 1, transform: 'translateX(0)' },\n        leave: { opacity: 0, transform: translationInOut },\n    };\n    const transitions = useTransition(inView, null, content)\n    \n    return (\n        <>\n            {transitions.map(({ item, key, props: propsBis}) =>\n                item && <animated.div key={key} style={propsBis}>\n                    <Screen {...props} />\n                </animated.div>\n                )\n            }\n        </>\n    );\n}\n\n\nexport default withStyles(({ unit, color, fontSize }: FastDatasetCleanerThemeType) => ({\n    card: {\n        display: 'block',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        color: color.reversePage,\n        fontSize: fontSize.xlarge,\n        whiteSpace: 'pre-line',\n        margin: 'auto',\n        marginTop: '20vh',\n        width: '100vw',\n    },\n    paragraph: {\n        margin: `${4 * unit}px 0`,\n    },\n    reloadButton: {\n        width: '20%',\n        margin: 'auto',\n    },\n}))(FinalScreen);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { FastDatasetCleanerThemeType } from '../theme/FastDatasetCleanerTheme';\nimport { ProgressProps } from '../types/Annotation';\n\n\ntype Props = {\n    progress: ProgressProps;\n    handlePressLeft: any;\n    handlePressRight: any;\n} & WithStylesProps;\n\nfunction Progress(props: Props){\n    const { progress, handlePressLeft, handlePressRight, css, styles } = props;\n    const { currentPage, numberImagesPerPage, totalImages } = progress;\n\n    const firstIndex = totalImages > 0 ? currentPage * numberImagesPerPage + 1 : 0;\n    const lastIndex = Math.min((currentPage + 1) * numberImagesPerPage, totalImages);\n    const pct = (currentPage * numberImagesPerPage * 100 / totalImages).toPrecision(4);\n    \n    return (\n        <div {...css(styles.progress)}>\n            <h3 {...css(styles.title)}>{firstIndex}-{lastIndex} / {totalImages}</h3>\n            <h3 {...css(styles.title)}>({pct}%)</h3>\n            <h3 {...css(styles.navigationArrows)}>\n                {currentPage > 0 && (\n                    <>\n                        <div onClick={handlePressLeft} {...css(styles.arrow)}>⬅</div>\n                        <div {...css(styles.arrow)}>|</div>\n                    </>\n                )}\n                <div onClick={handlePressRight} {...css(styles.arrow)}>⮕</div>\n            </h3>\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, color, speed, isNightMode }: FastDatasetCleanerThemeType) => ({\n    title: {\n        marginBlockStart: unit,\n        marginBlockEnd: unit,\n        textAlign: 'right',\n    },\n    progress: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        fontSize: fontSize.medium,\n        paddingRight: 2 * unit,\n        fontWeight: 'bold',\n        borderRadius: 2 * unit,\n        background: isNightMode ? color.pageNight : color.pageDay,\n        color: isNightMode ? color.pageDay : color.pageNight,\n        transition: `background ${speed.fast}s ease-in-out, color ${speed.fast}s ease-in-out`,\n    },\n    bannerElement: {\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n    arrow: {\n        display: 'inline-block',\n        margin: `${2 * unit}px ${0.25 * unit}px`,\n        cursor: 'pointer',\n    },\n    navigationArrows: {\n        position: 'absolute',\n        display: 'inline-block',\n        top: 4.5 * unit,\n    },\n}))(Progress);\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport SampleAnnotation from './components/SampleAnnotation';\nimport Banner from './components/Banner';\nimport FetchService from './services/Fetch';\nimport HANDLE_KEY_PRESS, { useKeyboard } from './services/Keyboard';\nimport HANDLE_HORIZONTAL_WHEEL, { useHorizontalWheel } from './services/Wheel';\nimport { SampleType } from './types/Annotation';\nimport FinalScreen from './components/FinalScreen';\nimport Progress from './components/Progress';\nimport { getAnnotator, getDatasetPath, getIdColumnName, getSha } from './services/LocalStorage';\nimport { readUrl } from './services/Location';\n\n\nconst fetchService = new FetchService({ 'api_address': `${window.location.origin}/api/` });\n\nconst noop = () => {};\n\n\ntype Props = {\n  nightMode: boolean;\n  changeNightMode: Function;\n};\n\nfunction App(props: Props) {\n  const { nightMode, changeNightMode } = props\n  const [bannerOpen, setBannerOpen] = useState(!getAnnotator() || !getDatasetPath() || !getIdColumnName() || !getSha());\n  const [samples, setSamples] = useState<SampleType[]>([]);\n  const [navigationDirection, setNavigationDirection] = useState('none');\n\n  const updateSamples = (direction: string) => {\n    setNavigationDirection(direction);\n    setSamples(fetchService.getSample());\n  };\n\n  useEffect(() => {\n    readUrl();\n    fetchService.getAnnotations().finally(() => updateSamples('none'));\n  }, []);\n\n  const pressLeft = () => fetchService.decrPage().then(() => updateSamples('left'));\n  const pressRight = () => fetchService.incrPage().then(() => updateSamples('right'));\n  const pressNext = () => fetchService.nextPage().then(() => updateSamples('right'));\n\n  const handleKeyPress = (event: Event) =>\n    !bannerOpen ? HANDLE_KEY_PRESS(event, pressLeft, pressRight, pressNext) : noop;\n  useKeyboard(handleKeyPress);\n\n  const handleSideScroll = (event: Event) =>\n    !bannerOpen ? HANDLE_HORIZONTAL_WHEEL(event, pressLeft, pressRight) : noop;\n  useHorizontalWheel(handleSideScroll);\n\n  const handleChangeValue = (value: boolean, index: number) =>\n    fetchService.setValue(value, index);\n\n\n  return (\n    <div className=\"App\">\n      <Banner\n        handleBanner={setBannerOpen}\n        isBannerOpen={bannerOpen}\n        nightMode={nightMode}\n        changeNightMode={changeNightMode}\n      />\n      {samples.length !== 0 ? (\n        <SampleAnnotation \n          images={samples} \n          isBannerOpen={bannerOpen}\n          handleChangeValue={handleChangeValue}\n          navigationDirection={navigationDirection}\n          fetchService={fetchService}\n        />\n      ) : (\n        <FinalScreen navigationDirection={navigationDirection} />\n      )}\n      {samples.length !== 0 && (\n        <Progress\n          progress={fetchService.getProgress()}\n          handlePressLeft={pressLeft}\n          handlePressRight={pressRight}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\nimport WithStylesContext from 'react-with-styles/lib/WithStylesContext';\nimport AphroditeInterface from 'react-with-styles-interface-aphrodite';\n\nimport FastDatasetCleanerThemeType from './theme/FastDatasetCleanerTheme';\nimport App from './App';\n\n\nconst now = new Date().getHours();\nconst NIGHT_MODE = now <= 8 || now >= 20;\n\nconst SET_BACKGROUND_COLOR = (nightMode) =>\n  `transition: background ${FastDatasetCleanerThemeType(nightMode).speed.fast}s ease; background: ${FastDatasetCleanerThemeType(nightMode).color.page}`;\n\n\nfunction Bootstrap() {\n  const [nightMode, setNightMode] = useState(NIGHT_MODE);\n\n  const handleNightMode = () => setNightMode(!nightMode);\n\n  document.body.style = SET_BACKGROUND_COLOR(nightMode);\n\n  return (\n    <WithStylesContext.Provider\n      value={{\n        stylesInterface: AphroditeInterface,\n        stylesTheme: FastDatasetCleanerThemeType(nightMode),\n      }}\n    >\n      <App\n        nightMode={nightMode}\n        changeNightMode={handleNightMode}\n      />\n    </WithStylesContext.Provider>\n  )\n}\n\nexport default Bootstrap;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Bootstrap from './Bootstrap';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Bootstrap />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/menu_logo.3c82aef9.png\";"],"sourceRoot":""}