{"version":3,"sources":["theme/PhotoRoomTheme.tsx","services/Keyboard.tsx","services/LocalStorage.tsx","components/elements/TextDisplay.tsx","components/elements/Input.tsx","components/elements/Separator.tsx","components/elements/Select.tsx","services/Location.tsx","components/elements/Button.tsx","components/elements/Section.tsx","components/elements/Switch.tsx","components/BannerContent.tsx","components/elements/Overlay.tsx","components/Banner.tsx","components/Sample.tsx","components/SampleAnnotation.tsx","services/Arguments.tsx","services/Api.tsx","services/FetchUtils.tsx","services/Fetch.tsx","services/Wheel.tsx","components/FinalScreen.tsx","components/Progress.tsx","App.tsx","Bootstrap.jsx","serviceWorker.js","index.js","components/photoroom_logo.png"],"names":["nightMode","isNightMode","unit","color","PHOTOROOM","PHOTOROOM_LIGHT","page","reversePage","pageNight","pageDay","VALID","NOTVALID","banner","bannerText","bannerSeparator","overlay","speed","fast","veryFast","ultraFast","fontSize","small","medium","large","xlarge","fontFamily","opacity","light","dark","KEYS_LEFT","KEYS_RIGHT","KEYS_NEXT","KEYS_OPEN_CLOSE_BANNER","KEYS_GET_IMAGES","useKeyboard","handleKeyPress","useEffect","document","addEventListener","removeEventListener","HANDLE_KEY_PRESS","event","pressLeft","pressRight","pressNext","keyPressed","key","includes","getLSValue","localStorage","getItem","setLSValue","value","setItem","trim","getAnnotator","OPTIONS_IMG_PER_PAGE","getImgPerPage","parseInt","setImgPerPage","imgsPerPage","getSha","setSha","password","getDatasetPath","setDatasetPath","path","getImagesFolder","setImagesFolder","getMasksFolder","setMasksFolder","OPTIONS_USE_MASKS","getUseMasks","setUseMasks","useMasks","getIdColumnName","setIdColumnName","name","getImagesExtension","setImagesExtension","ext","getMasksExtension","setMasksExtension","getAnnotationUltraFastModeLS","withStyles","displayedText","textAlign","marginBlockEnd","textOverflow","overflow","props","text","css","styles","titleInput","maxHeight","inputArea","width","padding","borderRadius","background","transition","boxShadow","bannerElement","margin","bannerHidden","transform","title","isHidden","displayInputValue","onChange","onBlur","useState","valueInput","setValueInput","type","e","inputValue","target","separator","height","thinSeparator","thin","UrlArgs","select","options","map","option","getSharedUrl","origin","URL","window","location","href","args","sha","csv","imgPerPage","imagesFolder","masksFolder","idColumn","imgExt","masksExt","push","CSV_PATH","IMAGES_PER_PAGE","ID_COLUMN","IMAGES_FOLDER","USE_MASKS","toLowerCase","MASKS_FOLDER","IMAGES_EXTENSION","MASKS_EXTENSION","PASSWORD","join","createSharedUrlArgs","updateUrl","history","pushState","setLSFromUrl","url","arg","setter","searchParams","get","button","fontWeight","whiteSpace","cursor","handleClick","onClick","titleSection","marginBlockStart","children","switch","position","display","backgroundColor","switchChecked","switchInput","roundSlider","top","right","content","switchHeight","left","bottom","roundSliderChecked","switchWidth","switchArea","switchLegend","stateFalse","stateTrue","checked","setChecked","newChecked","handleClickGetImages","reload","bannerContent","marginTop","zIndex","overflowY","bannerOpen","isClicked","annot","setAnnot","setCsv","imagesPerPage","setImagesPerPage","shaPass","setShaPass","imgFold","setImgFold","maskFold","setMaskFold","setUseMasksValue","setIdColumn","setImgExt","setMasksExt","annotationUltraFastMode","setAnnotationUltraFastMode","InputBanner","useCallback","SelectBanner","SwitchBanner","SectionBanner","ButtonBanner","csvPath","folder","extension","useMasksValue","annotator","setAnnotator","toString","mode","setAnnotationUltraFastModeLS","overlayHidden","isVisible","style","noop","INPUT_TAGS","logoClicked","logoNotClicked","logo","border","nightButton","openBannerWidth","nightButtonHidden","closeBannerWidth","isBannerOpen","handleBanner","changeNightMode","noActiveInputTag","activeElement","indexOf","tagName","onClickCard","titleDayNightMode","src","PhotoRoomLogo","alt","BannerContent","maxHeightCardContent","card","minHeight","cardUltraFast","cardValid","cardNotValid","cardNotValidUltraFast","annotated","cardAnnotated","idCard","borderRight","id","image","marginLeft","maxWidth","sample","navigationDirection","fetchService","handleChangeValue","sampleNumber","changing","isValid","setIsValid","ultraFastMode","inView","setInView","toggleValue","cardStyle","translationInOut","from","enter","leave","transitions","useTransition","item","propsBis","div","onKeyDown","getImage","GetImageArgs","mainColumnHeight","mainColumn","marginRight","paddingTop","paddingBottom","flexWrap","images","HEADERS_POST","makeBody","json","method","headers","body","JSON","stringify","formatImages","index","formatImage","FetchService","api_address","images_per_page","totalImages","processedImages","samples","firstLoading","getSample","getProgress","currentPage","numberImagesPerPage","changePage","condition","newPage","getAnnotations","Promise","incrPage","decrPage","nextPage","annotate","setValue","newSample","endpoint","a","fetch","then","res","post","first","Api","data","error","alert","treatNewData","imageId","ID","annotations","_","this","total","processed","undefined","length","lastPage","Math","ceil","HANDLE_HORIZONTAL_WHEEL","wheelLeft","wheelRight","deltaX","deltaY","visualViewport","scale","abs","handleClickButton","Screen","paragraph","reloadButton","progress","paddingRight","arrow","navigationArrows","handlePressLeft","handlePressRight","firstIndex","lastIndex","min","pct","toPrecision","App","setBannerOpen","setSamples","setNavigationDirection","updateSamples","direction","currentUrl","readUrl","finally","handleHorizontalWheel","throttled","throttle","className","now","Date","getHours","NIGHT_MODE","Bootstrap","setNightMode","PhotoRoomTheme","SET_BACKGROUND_COLOR","Provider","stylesInterface","AphroditeInterface","stylesTheme","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.6c4f1303.chunk.js","sourcesContent":["import { Theme } from \"react-with-styles\";\n\nexport type PhotoRoomThemeType = {\n  isNightMode: boolean;\n  unit: number;\n  color: any;\n  speed: any;\n  fontSize: any;\n  fontFamily: string;\n  opacity: any;\n} & Theme;\n\nconst COLOR_PAGE_DAY = '#fff';\nconst COLOR_PAGE_NIGHT = '#333';\n\nexport default (nightMode: boolean) => ({\n    isNightMode: nightMode,\n    unit: 8,\n    color: {\n      PHOTOROOM: '#00155A',\n      PHOTOROOM_LIGHT: '#2457ff',\n      page: nightMode ? COLOR_PAGE_NIGHT : COLOR_PAGE_DAY,\n      reversePage: nightMode ? COLOR_PAGE_DAY : COLOR_PAGE_NIGHT,\n      pageNight: COLOR_PAGE_NIGHT,\n      pageDay: COLOR_PAGE_DAY,\n      VALID: '#3caf40',\n      NOTVALID: '#e45247',\n      banner: '#000e3e',\n      bannerText: '#fff',\n      bannerSeparator: '#ddd',\n      overlay: '#000',\n    },\n    speed: {\n      fast: 0.3,\n      veryFast: 0.15,\n      ultraFast: 0,\n    },\n    fontSize: {\n      small: 10,\n      medium: 14,\n      large: 16,\n      xlarge: 20,\n    },\n    fontFamily: 'Ubuntu',\n    opacity: {\n      light: 0.2,\n      medium: 0.5,\n      dark: 0.8,\n    }\n  });","import { useEffect } from \"react\";\n\nconst KEYS_LEFT = ['ArrowLeft'];\nconst KEYS_RIGHT = ['ArrowRight'];\nconst KEYS_NEXT = ['Enter'];\nexport const KEYS_OPEN_CLOSE_BANNER = [' ', 'm'];\nexport const KEYS_GET_IMAGES = ['g', 'i'];\n\n\nconst HANDLE_KEY_PRESS = (event: any, pressLeft: Function, pressRight: Function, pressNext: Function) => {\n    const keyPressed = event.key;\n    if (KEYS_LEFT.includes(keyPressed)) {\n        pressLeft();\n    } else if (KEYS_RIGHT.includes(keyPressed)) {\n        pressRight();\n    } else if (KEYS_NEXT.includes(keyPressed)) {\n        pressNext();\n    }\n}\n\ntype handleKeyPressType = (event: Event) => void\nexport const useKeyboard = (handleKeyPress: handleKeyPressType) =>\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleKeyPress);\n        return () => document.removeEventListener(\"keydown\", handleKeyPress);\n    }, [handleKeyPress]);\n\nexport default HANDLE_KEY_PRESS;\n","const getLSValue = (key: string) => localStorage.getItem(key);\nconst setLSValue = (key: string, value: string) => localStorage.setItem(key, value.trim());\n\nconst annotatorLS = 'annotator';\nexport const getAnnotator = () => getLSValue(annotatorLS);\nexport const setAnnotator = (annotator: string) => setLSValue(annotatorLS, annotator);\n\nexport const DEFAULT_IMG_PER_PAGE = 8;\nexport const OPTIONS_IMG_PER_PAGE = [\"2\", \"4\", \"6\", \"8\"];\nconst imgPerPageLS = 'imagesPerPage';\nexport const getImgPerPage = () => parseInt(getLSValue(imgPerPageLS) || \"8\");\nexport const setImgPerPage = (imgsPerPage: string) => setLSValue(imgPerPageLS, imgsPerPage);\n\nconst shaLS = 'sha_pass';\nexport const getSha = () => getLSValue(shaLS);\nexport const setSha = (password: string) => setLSValue(shaLS, password);\n\nconst datasetPathLS = 'datasetPath';\nexport const getDatasetPath = () => getLSValue(datasetPathLS);\nexport const setDatasetPath = (path: string) => setLSValue(datasetPathLS, path);\n\nconst imagesFolderLS = 'imagesFolder';\nexport const getImagesFolder = () => getLSValue(imagesFolderLS);\nexport const setImagesFolder = (path: string) => setLSValue(imagesFolderLS, path);\n\nconst masksFolderLS = 'masksFolder';\nexport const getMasksFolder = () => getLSValue(masksFolderLS);\nexport const setMasksFolder = (path: string) => setLSValue(masksFolderLS, path);\n\nconst useMasksLS = 'useMasks';\nexport const OPTIONS_USE_MASKS = ['true', 'false'];\nexport const getUseMasks = () => getLSValue(useMasksLS);\nexport const setUseMasks = (useMasks: string) => setLSValue(useMasksLS, useMasks);\n\nconst idColumnNameLS = 'idColumnName';\nexport const getIdColumnName = () => getLSValue(idColumnNameLS);\nexport const setIdColumnName = (name: string) => setLSValue(idColumnNameLS, name);\n\nconst extensionImagesLS = 'imagesExtension';\nexport const getImagesExtension = () => getLSValue(extensionImagesLS);\nexport const setImagesExtension = (ext: string) => setLSValue(extensionImagesLS, ext);\n\nconst extensionMasksLS = 'masksExtension';\nexport const getMasksExtension = () => getLSValue(extensionMasksLS);\nexport const setMasksExtension = (ext: string) => setLSValue(extensionMasksLS, ext);\n\nconst annotationUltraFastModeLS = 'annotationUltraFast';\nexport const getAnnotationUltraFastModeLS = () => getLSValue(annotationUltraFastModeLS) === 'true';\nexport const setAnnotationUltraFastModeLS = (mode: boolean) => setLSValue(annotationUltraFastModeLS, `${mode}`);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../../theme/PhotoRoomTheme';\n\n\ntype Props = {\n    text?: string;\n} & WithStylesProps;\n\nfunction TextDisplay(props: Props){\n    const { text, css, styles } = props;\n    \n    return (\n        <>\n            {text && (\n                <h3 {...css(styles.displayedText)}>{text}</h3>\n            )}\n        </>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, color }: PhotoRoomThemeType) => ({\n    displayedText: {\n        color: color.bannerText,\n        textAlign: 'left',\n        fontSize: fontSize.medium,\n        marginBlockEnd: 1.5 * unit,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        'line-break': 'anywhere',\n    },\n}))(TextDisplay);\n","import React, { useState } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../../theme/PhotoRoomTheme';\nimport TextDisplay from './TextDisplay';\n\n\ntype Props = {\n    title?: string;\n    isHidden: boolean;\n    value: string | null;\n    displayInputValue?: boolean;\n    onChange?: any;\n    onBlur?: any;\n} & WithStylesProps;\n\nfunction Input(props: Props){\n    const { title, isHidden, value, displayInputValue, onChange, onBlur, css, styles } = props;\n    \n    const [valueInput, setValueInput] = useState(value === null ? '' : value);\n\n    const onChangeInput = (e: any) => {\n        const inputValue = e.target.value;\n        setValueInput(inputValue);\n        if (onChange) {\n            onChange(e);\n        }\n    }\n    \n    return (\n        <div\n            {...css(\n                styles.bannerElement,\n                isHidden && styles.bannerHidden\n            )}\n        >\n            <label>\n                {title && <h3 {...css(styles.titleInput)}>{title}</h3>}\n                {displayInputValue && <TextDisplay text={valueInput} />}\n                <input\n                    type=\"text\"\n                    value={value || ''}\n                    onChange={onChangeInput}\n                    onBlur={onBlur}\n                    {...css(styles.inputArea)}\n                />\n            </label>\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, fontFamily, color, speed }: PhotoRoomThemeType) => ({\n    titleInput: {\n        color: color.bannerText,\n        textAlign: 'left',\n        fontSize: fontSize.large,\n        marginBlockEnd: 1.5 * unit,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        maxHeight: fontSize.large + 0.25 * unit,\n    },\n    inputArea: {\n        width: `calc(100% - ${4 * unit}px)`,\n        fontSize: fontSize.large,\n        padding: `${0.5 * unit}px ${1.5 * unit}px`,\n        borderRadius: 1.5 * unit,\n        background: color.page,\n        color: color.reversePage,\n        fontFamily: fontFamily,\n        transition: `background ${speed.fast}s ease-in-out,\n                    color ${speed.fast}s ease-in-out,\n                    box-shadow ${speed.fast}s ease-in-out`,\n\n        ':focus': {\n            boxShadow: `0 0 ${unit}px 0 ${color.bannerText}`,\n        }\n    },\n    bannerElement: {\n        margin: `${unit}px 0`,\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Input);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../../theme/PhotoRoomTheme';\n\ntype Props = {\n    thin?: boolean;\n} & WithStylesProps;\n\nconst Separator = ({ thin, css, styles }: Props) => <div {...css(styles.separator, thin && styles.thinSeparator)}></div>;\n\nexport default withStyles(({ unit, color }: PhotoRoomThemeType) => ({\n    separator: {\n        width: '100%',\n        margin: `${3 * unit}px 0`,\n        borderRadius: 3 * unit,\n        height: 0.25 * unit,\n        background: color.bannerSeparator,\n    },\n    thinSeparator: {\n        height: 0.125 * unit,\n        margin: `${2.5 * unit}px 0 ${2 * unit}px 0`,\n    },\n}))(Separator);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../../theme/PhotoRoomTheme';\n\n\ntype Props = {\n    title: string;\n    name: string;\n    isHidden: boolean;\n    value: string | null;\n    options: string[];\n    onChange?: any;\n} & WithStylesProps;\n\nfunction Select(props: Props){\n    const { title, name, isHidden, value, options, onChange, css, styles } = props;\n    \n    return (\n        <div\n            {...css(\n                styles.bannerElement,\n                isHidden && styles.bannerHidden\n            )}\n        >\n            <label>\n                <h3 {...css(styles.titleInput)}>{title}</h3>\n                <select name={name} value={value || ''} onChange={onChange} {...css(styles.select)}>\n                    {options.map(option => <option key={option} value={option}>{option}</option>)}\n                </select>\n            </label>\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, fontFamily, color, speed }: PhotoRoomThemeType) => ({\n    titleInput: {\n        color: color.bannerText,\n        textAlign: 'left',\n        fontSize: fontSize.large,\n        marginBlockEnd: 1.5 * unit,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        maxHeight: fontSize.large + 0.25 * unit,\n    },\n    select: {\n        width: `100%`,\n        fontSize: fontSize.large,\n        height: fontSize.large + 2 * unit,\n        padding: `${0.5 * unit}px ${1.5 * unit}px`,\n        borderRadius: 1.5 * unit,\n        background: color.page,\n        color: color.reversePage,\n        fontFamily: fontFamily,\n        transition: `background ${speed.fast}s ease-in-out,\n                    color ${speed.fast}s ease-in-out,\n                    box-shadow ${speed.fast}s ease-in-out`,\n\n        ':focus': {\n            boxShadow: `0 0 ${unit}px 0 ${color.bannerText}`,\n        }\n    },\n    bannerElement: {\n        margin: `${unit}px 0`,\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Select);\n","import {\n    getSha,\n    getDatasetPath,\n    getImgPerPage,\n    getImagesFolder,\n    getMasksFolder,\n    getUseMasks,\n    getIdColumnName,\n    setSha,\n    setDatasetPath,\n    setImgPerPage,\n    setImagesFolder,\n    setMasksFolder,\n    setUseMasks,\n    setIdColumnName,\n    getImagesExtension,\n    getMasksExtension,\n    setImagesExtension,\n    setMasksExtension\n} from \"./LocalStorage\";\n\nenum UrlArgs {\n    PASSWORD = 'sha',\n    IMAGES_PER_PAGE = 'imgPerPage',\n    CSV_PATH = 'csv',\n    IMAGES_FOLDER = 'imagesFolder',\n    MASKS_FOLDER = 'masksFolder',\n    USE_MASKS = 'useMasks',\n    ID_COLUMN = 'idColumn',\n    IMAGES_EXTENSION = 'imgExt',\n    MASKS_EXTENSION = 'maskExt',\n};\n\nconst createSharedUrlArgs = () => {\n    let args: string[] = [];\n    const sha = getSha();\n    const csv = getDatasetPath();\n    const imgPerPage = getImgPerPage();\n    const imagesFolder = getImagesFolder();\n    const masksFolder = getMasksFolder();\n    const useMasks = getUseMasks();\n    const idColumn = getIdColumnName();\n    const imgExt = getImagesExtension();\n    const masksExt = getMasksExtension();\n\n    if (csv) {\n        args.push(`${UrlArgs.CSV_PATH}=${csv}`);\n    }\n    if (imgPerPage) {\n        args.push(`${UrlArgs.IMAGES_PER_PAGE}=${imgPerPage}`);\n    }\n    if (idColumn) {\n        args.push(`${UrlArgs.ID_COLUMN}=${idColumn}`);\n    }\n    if (imagesFolder) {\n        args.push(`${UrlArgs.IMAGES_FOLDER}=${imagesFolder}`);\n    }\n    if (useMasks) {\n        args.push(`${UrlArgs.USE_MASKS}=${useMasks}`);\n    }\n    if (useMasks?.toLowerCase() === 'true' && masksFolder) {\n        args.push(`${UrlArgs.MASKS_FOLDER}=${masksFolder}`);\n    }\n    if (imgExt) {\n        args.push(`${UrlArgs.IMAGES_EXTENSION}=${imgExt}`);\n    }\n    if (masksExt) {\n        args.push(`${UrlArgs.MASKS_EXTENSION}=${masksExt}`);\n    }\n    if (sha) {\n        args.push(`${UrlArgs.PASSWORD}=${sha}`);\n    }\n\n    if (args === []) {\n        return \"\";\n    }\n    return \"?\" + args.join('&');\n};\n\nconst getSharedUrl = () => {\n    const currentUrl = new URL(window.location.href);\n    const origin = currentUrl.origin;\n    const args = createSharedUrlArgs();\n    return `${origin}${args}`;\n}\n\nexport function updateUrl() {\n    window.history.pushState(null, \"Fast Dataset Cleaner\", getSharedUrl());\n}\n\nconst setLSFromUrl = (url: URL, arg: string, setter: Function) => {\n    const value = url.searchParams.get(arg)\n    if (value) {\n        setter(value);\n    }\n}\n\nexport const readUrl = () => {\n    const currentUrl = new URL(window.location.href);\n    setLSFromUrl(currentUrl, UrlArgs.PASSWORD, setSha);\n    setLSFromUrl(currentUrl, UrlArgs.CSV_PATH, setDatasetPath);\n    setLSFromUrl(currentUrl, UrlArgs.IMAGES_PER_PAGE, setImgPerPage);\n    setLSFromUrl(currentUrl, UrlArgs.IMAGES_FOLDER, setImagesFolder);\n    setLSFromUrl(currentUrl, UrlArgs.MASKS_FOLDER, setMasksFolder);\n    setLSFromUrl(currentUrl, UrlArgs.USE_MASKS, setUseMasks);\n    setLSFromUrl(currentUrl, UrlArgs.ID_COLUMN, setIdColumnName);\n    setLSFromUrl(currentUrl, UrlArgs.IMAGES_EXTENSION, setImagesExtension);\n    setLSFromUrl(currentUrl, UrlArgs.MASKS_EXTENSION, setMasksExtension);\n}\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../../theme/PhotoRoomTheme';\n\n\ntype Props = {\n    title: string;\n    isHidden: boolean;\n    handleClick: any;\n} & WithStylesProps;\n\nfunction Button(props: Props){\n    const { title, isHidden, handleClick, css, styles } = props;\n    \n    return (\n        <div\n            {...css(\n                styles.bannerElement,\n                isHidden && styles.bannerHidden\n            )}\n        >\n            <button type=\"button\" {...css(styles.button)} onClick={handleClick}>{title}</button>\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, fontFamily, color, speed, isNightMode }: PhotoRoomThemeType) => ({\n    button: {\n        width: '100%',\n        fontFamily: fontFamily,\n        fontSize: fontSize.large,\n        fontWeight: 'bold',\n        padding: `${unit}px ${1.5 * unit}px`,\n        borderRadius: 2 * unit,\n        background: isNightMode ? color.pageNight : color.pageDay,\n        color: isNightMode ? color.pageDay : color.pageNight,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        maxHeight: fontSize.large + 0.25 * unit + 3 * unit,\n        cursor: 'pointer',\n        transition: `background ${speed.fast}s ease-in-out, color ${speed.fast}s ease-in-out`,\n    },\n    bannerElement: {\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Button);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../../theme/PhotoRoomTheme';\nimport Separator from './Separator';\n\n\ntype Props = {\n    title: string;\n    isHidden: boolean;\n    children: React.ReactNode;\n} & WithStylesProps;\n\nfunction Section(props: Props){\n    const { title, isHidden, children, css, styles } = props;\n        \n    return (\n        <div\n            {...css(\n                styles.bannerElement,\n                isHidden && styles.bannerHidden\n            )}\n        >\n            {title && <h2 {...css(styles.titleSection)}>{title}</h2>}\n            {children}\n            <Separator thin />\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, color, speed }: PhotoRoomThemeType) => ({\n    titleSection: {\n        color: color.bannerText,\n        textAlign: 'center',\n        fontSize: fontSize.xlarge,\n        marginBlockEnd: 1.5 * unit,\n        marginBlockStart: 0.5 * unit,\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n    bannerElement: {\n        margin: `0 0 ${unit}px 0`,\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Section);\n","import React, { useState } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../../theme/PhotoRoomTheme';\n\ntype Props = {\n    value: boolean;\n    stateTrue: string;\n    stateFalse: string;\n    isHidden: boolean;\n    handleClick: (e: any) => void;\n} & WithStylesProps;\n\nconst Switch = (props: Props) => {\n    const { value, stateFalse, stateTrue, isHidden, handleClick, css, styles } = props;\n    const [checked, setChecked] = useState(value);\n\n    const handleChangeToggle = () => {\n        const newChecked = !checked;\n        setChecked(newChecked);\n        handleClick(newChecked);\n    }\n\n    return (\n        <label {...css(styles.switchArea, isHidden && styles.bannerHidden)}>\n            <h4 {...css(styles.switchLegend)}>{stateFalse}</h4>\n            <div {...css(styles.switch, checked && styles.switchChecked)}>\n                <input type=\"checkbox\" onClick={handleChangeToggle} {...css(styles.switchInput)} />\n                <span {...css(styles.roundSlider, checked && styles.roundSliderChecked)}></span>\n            </div>\n            <h4 {...css(styles.switchLegend)}>{stateTrue}</h4>\n        </label>\n    );\n}\n\nconst unit = 8;\nconst switchWidth = 7 * unit;\nconst switchHeight = 4 * unit;\nconst switchPadding = 0.5 * unit;\nconst switchDiscSize = switchHeight - 2 * switchPadding;\nexport default withStyles(({ fontSize, color, speed }: PhotoRoomThemeType) => ({\n    switch: {\n        position: 'relative',\n        display: 'inline-block',\n        width: switchWidth,\n        height: switchHeight,\n        backgroundColor: color.bannerSeparator,\n        borderRadius: switchHeight,\n        margin: `${0.5 * unit}px ${1.5 * unit}px`,\n        transition: `background-color ${speed.fast}s ease-in-out`,\n    },\n    switchChecked: {\n        backgroundColor: color.PHOTOROOM_LIGHT,\n    },\n    switchInput: {\n        opacity: 0,\n        width: 0,\n        height: 0,\n    },\n    roundSlider: {\n        position: 'absolute',\n        top: switchPadding,\n        right: 0,\n        transition: `transform ${speed.fast}s ease-in-out`,\n        borderRadius: switchHeight,\n\n        content: \"\",\n        height: switchDiscSize,\n        width: switchDiscSize,\n        left: switchPadding,\n        bottom: switchPadding,\n        backgroundColor: 'white',\n    },\n    roundSliderChecked: {\n        transform: `translateX(${switchWidth - switchDiscSize - 2 * switchPadding}px)`,\n    },\n    switchArea: {\n        cursor: 'pointer',\n    },\n    switchLegend: {\n        position: 'relative',\n        display: 'inline-block',\n        fontSize: fontSize.medium,\n        top: 0.75 * unit,\n        margin: 0,\n        color: color.pageDay,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n}))(Switch);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../theme/PhotoRoomTheme';\nimport Input from './elements/Input';\nimport Separator from './elements/Separator';\nimport Select from './elements/Select';\nimport {\n    getAnnotator,\n    getImgPerPage,\n    getSha,\n    setAnnotator,\n    setImgPerPage,\n    setSha,\n    DEFAULT_IMG_PER_PAGE,\n    OPTIONS_IMG_PER_PAGE,\n    getDatasetPath,\n    setDatasetPath,\n    setImagesFolder,\n    setMasksFolder,\n    getImagesFolder,\n    getMasksFolder,\n    OPTIONS_USE_MASKS,\n    setUseMasks,\n    getUseMasks,\n    getIdColumnName,\n    setIdColumnName,\n    setImagesExtension,\n    getImagesExtension,\n    getMasksExtension,\n    setMasksExtension,\n    setAnnotationUltraFastModeLS,\n    getAnnotationUltraFastModeLS\n} from '../services/LocalStorage';\nimport { updateUrl } from '../services/Location';\nimport Button from './elements/Button';\nimport Section from './elements/Section';\nimport TextDisplay from './elements/TextDisplay';\nimport Switch from './elements/Switch';\n\n\nconst FOLDER_PLACEHOLDER = '/path/to/folder/';\nexport const handleClickGetImages = () => window.location.reload(false);\n\ntype Props = {\n    isClicked: boolean;\n} & WithStylesProps;\n\n\nfunction Banner(props: Props){\n    const { isClicked, css, styles } = props;\n    const [annot, setAnnot] = useState(getAnnotator() || '');\n    const [csv, setCsv] = useState(getDatasetPath() || '');\n    const [imagesPerPage, setImagesPerPage] = useState(getImgPerPage() || DEFAULT_IMG_PER_PAGE);\n    const [shaPass, setShaPass] = useState(getSha() || '');\n    const [imgFold, setImgFold] = useState(getImagesFolder() || '');\n    const [maskFold, setMaskFold] = useState(getMasksFolder() || '');\n    const [useMasks, setUseMasksValue] = useState(getUseMasks() || 'false');\n    const [idColumn, setIdColumn] = useState(getIdColumnName() || 'id');\n    const [imgExt, setImgExt] = useState(getImagesExtension() || '');\n    const [masksExt, setMasksExt] = useState(getMasksExtension() || '');\n    const [annotationUltraFastMode, setAnnotationUltraFastMode] = useState(getAnnotationUltraFastModeLS() || false);\n    \n    useEffect(() => {\n        if (!getIdColumnName()) {\n            setIdColumnName('id');\n        }\n    }, []);\n\n    const handleChangeAnnotator = (e: any) => {\n        const annotator = e.target.value;\n        setAnnotator(annotator);\n        setAnnot(annotator);\n    };\n\n    const handleChangeImgPerPage = (e: any) => {\n        const imgPerPage = e.target.value;\n        setImgPerPage(imgPerPage);\n        setImagesPerPage(imgPerPage);\n        updateUrl();\n    };\n    \n    const handleChangeCsv = (e: any) => {\n        const csvPath = e.target.value;\n        setDatasetPath(csvPath);\n        setCsv(csvPath);\n        updateUrl();\n    };\n    \n    const handleChangeSha = (e: any) => {\n        const password = e.target.value;\n        setShaPass(password);\n        setSha(password);\n        updateUrl();\n    };\n\n    const handleChangeImagesFolder = (e: any) => {\n        const folder = e.target.value;\n        setImagesFolder(folder);\n        setImgFold(folder);\n        updateUrl();\n    };\n\n    const handleChangeMasksFolder = (e: any) => {\n        const folder = e.target.value;\n        setMasksFolder(folder);\n        setMaskFold(folder);\n        updateUrl();\n    };\n\n    const handleChangeUseMasks = (e: any) => {\n        const useMasksValue = e.target.value;\n        setUseMasksValue(useMasksValue);\n        setUseMasks(useMasksValue);\n        updateUrl();\n    };\n\n    const handleChangeIdColumnName = (e: any) => {\n        const name = e.target.value;\n        setIdColumn(name);\n        setIdColumnName(name);\n        updateUrl();\n    };\n\n    const handleChangeImagesExtension = (e: any) => {\n        const extension = e.target.value;\n        setImgExt(extension);\n        setImagesExtension(extension);\n        updateUrl();\n    };\n\n    const handleChangeMasksExtension = (e: any) => {\n        const extension = e.target.value;\n        setMasksExt(extension);\n        setMasksExtension(extension);\n        updateUrl();\n    };\n\n    const handleChangeAnnotationMode = (mode: boolean) => {\n        setAnnotationUltraFastMode(mode);\n        setAnnotationUltraFastModeLS(mode);\n    }\n\n    const InputBanner = useCallback((props: any) => <Input isHidden={!isClicked} {...props} />, [isClicked]);\n    const SelectBanner = useCallback((props: any) => <Select isHidden={!isClicked} {...props} />, [isClicked]);\n    const SwitchBanner = useCallback((props: any) => <Switch isHidden={!isClicked} {...props} />, [isClicked]);\n    const SectionBanner = useCallback((props: any) => <Section isHidden={!isClicked} {...props} />, [isClicked]);\n    const ButtonBanner = useCallback((props: any) => <Button isHidden={!isClicked} {...props} />, [isClicked]);\n\n    return (\n        <div\n            {...css(\n                styles.bannerContent,\n                isClicked && styles.bannerOpen\n            )}\n        >\n            {isClicked && <Separator />}\n            <SectionBanner title=\"Password\">\n                <InputBanner\n                    value={shaPass}\n                    onChange={handleChangeSha}\n                />\n            </SectionBanner>\n            <SectionBanner title=\"About the CSV\">\n                <InputBanner\n                    displayInputValue\n                    title=\"CSV path\"\n                    value={csv}\n                    onChange={handleChangeCsv}\n                />\n                <InputBanner\n                    title=\"Name of the id column\"\n                    value={idColumn}\n                    onChange={handleChangeIdColumnName}\n                />\n            </SectionBanner>\n            <SectionBanner title=\"Images\">\n                <TextDisplay text={`${imgFold || FOLDER_PLACEHOLDER}{id}${imgExt}`} />\n                <InputBanner\n                    title=\"Images folder\"\n                    value={imgFold}\n                    onChange={handleChangeImagesFolder}\n                />\n                <InputBanner\n                    title=\"Images extension\"\n                    value={imgExt}\n                    onChange={handleChangeImagesExtension}\n                />\n            </SectionBanner>\n            <SectionBanner title=\"Masks\">\n                <SelectBanner\n                    title=\"Use masks\"\n                    name=\"use_masks\"\n                    value={useMasks}\n                    options={OPTIONS_USE_MASKS}\n                    onChange={handleChangeUseMasks}\n                />\n                {useMasks === 'true' && (\n                    <>\n                        <TextDisplay text={`${maskFold || FOLDER_PLACEHOLDER}{id}${masksExt}`} />\n                        <InputBanner\n                            title=\"Masks folder\"\n                            value={maskFold}\n                            onChange={handleChangeMasksFolder}\n                        />\n                        <InputBanner\n                            title=\"Masks extension\"\n                            value={masksExt}\n                            onChange={handleChangeMasksExtension}\n                        />\n                    </>\n                )}\n            </SectionBanner>\n            <SectionBanner title=\"Annotation\">\n                <InputBanner\n                    title=\"Annotator\"\n                    value={annot}\n                    onChange={handleChangeAnnotator}\n                />\n                <SelectBanner\n                    title=\"Images per page\"\n                    name=\"img_per_page\"\n                    value={imagesPerPage.toString()}\n                    options={OPTIONS_IMG_PER_PAGE}\n                    onChange={handleChangeImgPerPage}\n                />\n                <SwitchBanner\n                    value={annotationUltraFastMode}\n                    stateFalse=\"Fast mode\"\n                    stateTrue=\"Ludicrous mode\"\n                    handleClick={handleChangeAnnotationMode} />\n            </SectionBanner>\n            <ButtonBanner title=\"Get images\" handleClick={handleClickGetImages} />\n        </div>\n    );\n}\n\nconst unit = 8;\nconst bannerContentSideMargin = 3 * unit;\nexport default withStyles(({ unit, speed }: PhotoRoomThemeType) => ({\n    bannerContent: {\n        width: 0,\n        margin: bannerContentSideMargin,\n        marginTop : 19 * unit,\n        zIndex: 2,\n        overflowY: 'auto',\n        maxHeight: '85vh',\n        transition: `width ${speed.fast}s ease-in-out`,\n    },\n    bannerOpen: {\n        width: `calc(100% - 2 * ${bannerContentSideMargin}px)`,\n    },\n}))(Banner);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../../theme/PhotoRoomTheme';\n\ntype Props = {\n    zIndex?: number;\n    isVisible: boolean;\n    handleClick?: () => void;\n} & WithStylesProps;\n\nfunction Overlay(props: Props){\n    const { zIndex, isVisible, handleClick, css, styles } = props;\n    \n    return (\n        <div\n            onClick={handleClick}\n            style={{zIndex: zIndex || 1}}\n            {...css(isVisible ? styles.overlay : styles.overlayHidden)} \n        ></div>\n    );\n}\n\nexport default withStyles(({ opacity, color, speed }: PhotoRoomThemeType) => ({\n    overlay: {\n        width: '100vw',\n        height: '100vh',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        background: color.overlay,\n        opacity: opacity.dark,\n        transition: `opacity ${speed.fast}s ease-in-out`,\n\n        ':hover': {\n            cursor: 'pointer',\n        },\n    },\n    overlayHidden: {\n        opacity: 0,\n    },\n}))(Overlay);\n","import React, { useEffect } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport { PhotoRoomThemeType } from '../theme/PhotoRoomTheme';\n\nimport PhotoRoomLogo from './photoroom_logo.png';\nimport BannerContent, { handleClickGetImages } from './BannerContent';\nimport Overlay from './elements/Overlay';\nimport Button from './elements/Button';\nimport { KEYS_OPEN_CLOSE_BANNER, KEYS_GET_IMAGES } from '../services/Keyboard';\n\nconst noop = () => {};\nconst INPUT_TAGS = ['input', 'select', 'button', 'textarea'];\n\ntype Props = {\n    isBannerOpen: boolean;\n    handleBanner: Function;\n    nightMode: boolean;\n    changeNightMode: any;\n} & WithStylesProps;\n\nfunction Banner(props: Props){\n    const { isBannerOpen, handleBanner, nightMode, changeNightMode, css, styles } = props;\n\n    useEffect(() => {\n        const handleKeyPress = (event: any) => {\n            const keyPressed = event.key;\n            const noActiveInputTag = document.activeElement && INPUT_TAGS.indexOf(document.activeElement.tagName.toLowerCase()) === -1;\n            if (noActiveInputTag && KEYS_OPEN_CLOSE_BANNER.includes(keyPressed)) {\n                handleBanner(!isBannerOpen);\n            } else if (noActiveInputTag && isBannerOpen && KEYS_GET_IMAGES.includes(keyPressed)) {\n                handleClickGetImages();\n            }\n        }\n    \n        document.addEventListener(\"keydown\", handleKeyPress);\n        return () => document.removeEventListener(\"keydown\", handleKeyPress);\n    }, [isBannerOpen, handleBanner]);\n\n    const onClickCard = () => {\n        handleBanner(!isBannerOpen);\n    }\n\n    const onClickOverlay = () => {\n        handleBanner(false);\n    }\n\n    const titleDayNightMode = nightMode ? \"Night mode\" : \"Day mode\";\n    \n    return (\n        <>\n            <div\n                onClick={!isBannerOpen ? onClickCard : noop}\n                {...css(\n                    styles.banner,\n                    isBannerOpen && styles.bannerOpen\n                )}\n            >\n                <img\n                    src={PhotoRoomLogo}\n                    alt=\"Logo\"\n                    onClick={onClickCard}\n                    {...css(\n                        styles.logo,\n                        isBannerOpen ? styles.logoClicked : styles.logoNotClicked\n                    )}\n                />\n                <div {...css(styles.nightButton, !isBannerOpen && styles.nightButtonHidden)}>\n                    <Button title={titleDayNightMode} isHidden={!isBannerOpen} handleClick={changeNightMode} />\n                </div>\n\n                <BannerContent isClicked={isBannerOpen} />\n            </div>\n            <Overlay isVisible={isBannerOpen} handleClick={onClickOverlay} />\n        </>\n    );\n}\n\nconst unit = 8;\nconst closeLogoSize = 8 * unit;\nconst openLogoSize = 12 * unit;\nexport const closeBannerWidth = 11 * unit;\nconst openBannerWidth = 42 * unit;\nexport default withStyles(({ unit, color, speed }: PhotoRoomThemeType) => ({\n    banner: {\n        width: closeBannerWidth,\n        height: '100vh',\n        background: color.banner,\n        boxShadow: '0px 0px 20px 0px #000',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        zIndex: 2,\n        cursor: 'pointer',\n        transition: `width ${speed.fast}s ease-in-out`,\n    },\n    bannerOpen: {\n        width: openBannerWidth,\n        cursor: 'default',\n    },\n    logoClicked: {\n        transform: 'rotate(720deg)',\n        height: openLogoSize,\n        left: 3 * unit,\n        top: 3 * unit,\n    },\n    logoNotClicked: {\n        transform: 'rotate(0deg)',\n    },\n    logo: {\n        position: 'fixed',\n        top: 2 * unit,\n        left: unit,\n        height: closeLogoSize,\n        border: '2px solid #fff',\n        borderRadius: 3.5 * unit,\n        cursor: 'pointer',\n        transition: `transform ${speed.fast}s ease-in-out, height ${speed.fast}s ease-in-out, left ${speed.fast}s ease-in-out, top ${speed.fast}s ease-in-out`,\n    },\n    nightButton: {\n        position: 'fixed',\n        left: 6 * unit + openLogoSize,\n        top: openLogoSize - unit,\n        width: `calc(${openBannerWidth - openLogoSize - 6 * unit - 5 * unit}px)`,\n        padding: `0 ${unit}px`,\n        opacity: 1,\n        transition: `opacity ${0.5 * speed.fast}s ease-in-out, width ${speed.fast - 0.05}s ease-in-out 0.05s, left ${speed.fast}s ease-in-out`,\n    },\n    nightButtonHidden: {\n        left: 4 * unit + closeLogoSize,\n        width: `calc(${closeBannerWidth - closeLogoSize - 4 * unit - 5 * unit}px * 0.75)`,\n        opacity: 0,\n    },\n}))(Banner);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport {useTransition, animated} from 'react-spring'\n\nimport { PhotoRoomThemeType } from '../theme/PhotoRoomTheme';\nimport { SampleType } from '../types/Annotation';\nimport { useKeyboard } from '../services/Keyboard';\nimport { getImgPerPage, getAnnotationUltraFastModeLS } from '../services/LocalStorage';\nimport FetchService from '../services/Fetch';\nimport { closeBannerWidth } from './Banner';\n\n\ntype Props = {\n    sample: SampleType;\n    isBannerOpen: boolean;\n    navigationDirection: string;\n    fetchService: FetchService;\n    handleChangeValue: Function;\n} & WithStylesProps;\n\nfunction Sample(props: Props){\n    const { isBannerOpen, sample, navigationDirection, fetchService, handleChangeValue, css, styles } = props;\n    const { id, value, sampleNumber, annotated, changing, name } = sample;\n\n    const [isValid, setIsValid] = useState(value);\n\n    const ultraFastMode = getAnnotationUltraFastModeLS();\n\n    useEffect(() => setIsValid(value), [value]);\n\n    const [inView, setInView] = useState(false)\n    useEffect(() => {\n        setInView(true)\n        return () => setInView(false);\n    }, []);\n\n    const toggleValue = useCallback(() => {\n        handleChangeValue(!isValid, sampleNumber);\n        setIsValid(!isValid);\n    }, [isValid, sampleNumber, handleChangeValue]);\n\n    const handleKeyPress = useCallback((event: any) => {\n        const keyPressed = event.key;\n        if (parseInt(keyPressed) === id && !isBannerOpen) {\n            toggleValue();\n        }\n    }, [id, isBannerOpen, toggleValue]);\n\n    useKeyboard(handleKeyPress);\n\n    const unit = 8;\n    const cardStyle = {\n        maxWidth: '45vw',\n        width: `calc((100vw - ${closeBannerWidth}px) / 2 - ${10 * unit}px)`,\n        display: 'inline-block',\n    };\n    const translationInOut = `translateX(${navigationDirection === 'left' ? '-' : ''}100vw)`;\n\n    const content = {\n        from: { opacity: 0, transform: translationInOut, ...cardStyle },\n        enter: { opacity: 1, transform: 'translateX(0)', ...cardStyle },\n        leave: { opacity: 0, transform: translationInOut, ...cardStyle },\n    };\n\n    const transitions = useTransition(inView, null, content)\n    \n    return (\n        <>\n            {transitions.map(({ item, key, props: propsBis}) =>\n                item && <animated.div key={key} style={propsBis}>\n                    <div\n                        onClick={toggleValue}\n                        onKeyDown={handleKeyPress}\n                        {...css(\n                            styles.card,\n                            ultraFastMode && styles.cardUltraFast,\n                            isValid ? styles.cardValid : styles.cardNotValid,\n                            annotated && !changing && styles.cardAnnotated,\n                            ultraFastMode && !isValid && styles.cardNotValidUltraFast,\n                        )}\n                    >    \n                        <div {...css(styles.idCard)}>\n                            <div {...css(styles.id)}>{id}</div>\n                            {annotated && <div {...css(styles.annotated)}>{isValid ? '✔' : '✘'}</div>}\n                        </div>\n                        <img src={fetchService.getImage(name)} alt=\"source\" {...css(styles.image)} />\n                    </div>\n                </animated.div>\n                )\n            }\n        </>\n    );\n}\n\n\nconst unit = 8;\nexport const cardWidth = 95 * unit;\nconst maxHeightCardContent = `calc(100vh / ${getImgPerPage() / 2} - ${2 * unit}px)`;\nexport default withStyles(({ unit, color, speed, fontSize }: PhotoRoomThemeType) => ({\n    card: {\n        maxHeight: `calc(100vh / ${getImgPerPage() / 2})`,\n        border: '1px solid #ccc',\n        borderRadius: 3 * unit,\n        margin: `${0.5 * unit}px ${1 * unit}px`,\n        height: `calc(100% - 2 * ${0.75 * unit}px)`,\n        minHeight: `calc((100vh - ${4 * unit + 2 * unit}px) / ${getImgPerPage() / 2} - ${1 * unit}px)`,\n        transition:\n            `background ${speed.fast}s ease,\n            box-shadow ${speed.fast}s ease,\n            transform ${speed.fast}s ease,\n            opacity ${speed.fast}s ease`,\n        overflow: 'hidden',\n        cursor: 'pointer',\n        ':hover': {\n            boxShadow: `0 0 ${2.5 * unit}px 0 #000`,\n        }\n    },\n    cardUltraFast: {\n        transition:\n            `background ${speed.ultraFast}s ease,\n            box-shadow ${speed.ultraFast}s ease,\n            transform ${speed.ultraFast}s ease,\n            opacity ${speed.ultraFast}s ease`,\n    },\n    cardValid: {\n        background: color.VALID,\n    },\n    cardNotValid: {\n        background: color.NOTVALID,\n    },\n    cardNotValidUltraFast: {\n        opacity: 0.05,\n    },\n    annotated: {\n        marginTop: unit,\n        fontSize: fontSize.large,\n    },\n    cardAnnotated: {\n        opacity: 0.5,\n    },\n    idCard: {\n        fontWeight: 'bold',\n        position: 'absolute',\n        width: 5 * unit,\n        borderRight: '1px solid #ccc',\n        height: '100%',\n        maxHeight: maxHeightCardContent,\n    },\n    id: {\n        marginTop: 1.5 * unit,\n    },\n    image: {\n        height: '100%',\n        marginLeft: 5 * unit,\n        maxHeight: maxHeightCardContent,\n        maxWidth: `calc(100% - ${5 * unit + 2 * unit}px)`,\n    },\n}))(Sample);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { PhotoRoomThemeType } from '../theme/PhotoRoomTheme';\nimport Sample from './Sample';\nimport { SampleType } from '../types/Annotation';\nimport FetchService from '../services/Fetch';\nimport { closeBannerWidth } from './Banner';\n\ntype Props = {\n    images: SampleType[];\n    isBannerOpen: boolean;\n    fetchService: FetchService;\n    navigationDirection: string;\n    handleChangeValue: Function;\n} & WithStylesProps;\n\nfunction SampleAnnotation(props: Props) {\n    const { isBannerOpen, images, fetchService, navigationDirection, handleChangeValue, css, styles } = props;\n\n    return (\n        <div {...css(styles.mainColumn)}>\n            {images.map(\n                (sample: SampleType) => \n                    <Sample\n                        sample={sample}\n                        isBannerOpen={isBannerOpen}\n                        handleChangeValue={handleChangeValue}\n                        navigationDirection={navigationDirection}\n                        fetchService={fetchService}\n                        key={sample.name}\n                    />\n            )}\n        </div>\n    );\n}\n\nconst unit = 8;\nexport const mainColumnHeight = `calc(100vh - 2 * ${unit}px)`;\nexport default withStyles(({ color, unit, speed }: PhotoRoomThemeType) => ({\n    mainColumn: {\n        background: color.page,\n        marginLeft: closeBannerWidth + 2 * unit,\n        marginRight: 0,\n        paddingTop: unit,\n        paddingBottom: unit,\n        display: 'flex',\n        flexWrap: 'wrap',\n        height: mainColumnHeight,\n        transition: `background ${speed.fast}s ease-in-out`,\n    },\n}))(SampleAnnotation);\n","export enum GetImageArgs {\n    ID = 'id',\n    PASSWORD = 'sha',\n};\n","export default {\n    getAnnotations: 'get-annotations',\n    getImage: 'get-image',\n    annotate: 'annotate',\n};","import { getSha } from \"./LocalStorage\";\n\nconst HEADERS_POST = {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n};\n\nexport const makeBody = (json: Object) => ({\n    method: \"POST\",\n    headers: HEADERS_POST,\n    body: JSON.stringify({ sha: getSha(), ...json }),\n});","import { GetAnnotationsResponse, ImageAnnotation } from \"../types/Response\";\nimport { SampleType } from \"../types/Annotation\";\nimport Api from \"./Api\";\nimport { makeBody } from \"./FetchUtils\";\nimport { getImgPerPage, getSha, getAnnotator, getDatasetPath, getImagesFolder, getMasksFolder, getUseMasks, getIdColumnName, getImagesExtension, getMasksExtension } from \"./LocalStorage\";\nimport { GetImageArgs } from \"./Arguments\";\n\n\nconst formatImage = (image: ImageAnnotation) => ({\n  id: image.index%getImgPerPage() + 1,\n  sampleNumber: image.index,\n  value: typeof(image.value) == \"string\" ? true : image.value,\n  name: image.id,\n  annotated: image.value !== \"None\",\n  changing: false,\n});\n\n\nconst formatImages = (images: ImageAnnotation[]) => {\n  return images.map(image => formatImage(image));\n}\n\ntype Props = {\n    api_address: string;\n    images_per_page: number;\n    page?: number;\n    images?: ImageAnnotation[];\n    totalImages?: number;\n    processedImages?: number;\n};\n\nclass FetchService {\n    api_address: string;\n    images_per_page: number;\n    page: number;\n    images: ImageAnnotation[];\n    totalImages: number;\n    processedImages: number;\n    samples?: SampleType[];\n    firstLoading = true;\n\n    constructor(props: Props) {\n        this.api_address = props.api_address;\n        this.images_per_page = props.images_per_page || 8;\n        this.page = props.page || 0;\n        this.images = props.images || [];\n        this.totalImages = props.totalImages || 0;\n        this.processedImages = props.processedImages || 0;\n        this.samples = (props.images && formatImages(props.images)) || [];\n    }\n\n    getSample = () => this.samples || [];\n\n    getProgress = () => ({ currentPage: this.page, numberImagesPerPage: getImgPerPage(), totalImages: this.totalImages });\n\n    changePage = (condition: boolean, newPage: number) => {\n      if (condition) {\n        this.page = newPage;\n        return this.getAnnotations();\n      }\n      return new Promise(() => {});\n    }\n\n    incrPage = () => {\n      const condition = this.page * getImgPerPage() <= this.totalImages;\n      return this.changePage(condition, this.page + 1);\n    }\n\n    decrPage = () => {\n      const condition = this.page > 0;\n      return this.changePage(condition, this.page - 1);\n    }\n\n    nextPage = () => {\n      this.annotate();\n      const condition = this.page * getImgPerPage() <= this.totalImages;\n      return this.changePage(condition, this.page + 1);\n    }\n\n    setValue = (value: boolean, sampleNumber: number) => {\n      this.samples = this.samples && this.samples.map((sample: SampleType) => {\n        if (sample.sampleNumber === sampleNumber) {\n          const newSample = sample;\n          sample.value = value;\n          sample.changing = !sample.changing;\n          return newSample;\n        }\n        return sample;\n      });\n    }\n\n\n    treatNewData(data: GetAnnotationsResponse) {\n      const { images, total, processed } = data;\n      if (images && total && processed !== undefined) {\n        this.images = images;\n        this.totalImages = total;\n        this.processedImages = processed;\n        if (processed < total) {\n          this.page = images.length !== 0 ? (images[0].index / getImgPerPage()) : this.page;\n        } else {\n          const lastPage = Math.ceil((total - 1) / getImgPerPage());\n          this.page = (images.length !== 0) ? this.page : lastPage;\n        }\n        this.samples = formatImages(images);\n      }\n    }\n\n\n    get = async (endpoint: string) =>\n      fetch(`${this.api_address}${endpoint}`).then(res => res.json());\n\n    post = async (endpoint: string, json: any) =>\n      fetch(`${this.api_address}${endpoint}`, makeBody(json)).then(res => res.json());\n\n\n    getAnnotations = async () => {\n      const first = this.firstLoading ? -1 : this.page * getImgPerPage();\n\n      const json = {\n        \"first\": first,\n        \"offset\": getImgPerPage(),\n        \"sha\": getSha(),\n        \"csv_path\": getDatasetPath(),\n        \"images_folder\": getImagesFolder(),\n        \"masks_folder\": getMasksFolder(),\n        \"with_masks\": getUseMasks() === 'true',\n        \"id_column_name\": getIdColumnName(),\n        \"image_ext\": getImagesExtension(),\n        \"mask_ext\": getMasksExtension(),\n      };\n\n      return this.post(`${Api.getAnnotations}`, json)\n        .then((data: GetAnnotationsResponse) => {\n          if (data.error) {\n            alert(data.error);\n          } else {\n            if (this.firstLoading) {\n              this.firstLoading = false;\n            }\n            this.treatNewData(data);\n          }\n        });\n    }\n\n    getImage = (imageId: string) =>\n      `${this.api_address}${Api.getImage}?${GetImageArgs.ID}=${imageId}&${GetImageArgs.PASSWORD}=${getSha()}`;\n\n\n    annotate = async () => {\n      const annotations: { [key:string]: any} = {};\n      this.samples?.map(sample => annotations[sample.name] = sample.value);\n\n      const json = {\n        \"annotator\": getAnnotator(),\n        \"annotations\": annotations,\n        \"sha\": getSha(),\n      };\n\n      this.post(Api.annotate, json)\n        .then(_ => {});\n    }\n}\n\nexport default FetchService;\n","import { useEffect } from \"react\";\nimport { throttle } from \"lodash\";\n\nconst THRESHOLD_X = 10;\nconst THRESHOLD_Y = 5;\nconst THROTTLE_WAIT = 320;\n\nconst HANDLE_HORIZONTAL_WHEEL = (e: Event, wheelLeft: Function, wheelRight: Function) => {\n    // @ts-ignore\n    const { deltaX, deltaY } = e;\n    // @ts-ignore\n    const isPageZoomed = window.visualViewport.scale !== 1;\n    if (!isPageZoomed && Math.abs(deltaX) > THRESHOLD_X && Math.abs(deltaY) <= THRESHOLD_Y) {\n        deltaX > 0 ? wheelRight() : wheelLeft();\n    }\n}\n\ntype handleHorizontalWheelType = (event: Event) => void;\nexport const useHorizontalWheel = (handleHorizontalWheel: handleHorizontalWheelType) => \n    useEffect(() => {\n        const throttled = throttle(handleHorizontalWheel, THROTTLE_WAIT);\n\n        window.addEventListener(\"wheel\", throttled);\n        return () => window.removeEventListener(\"wheel\", throttled);\n    }, [handleHorizontalWheel]);\n\nexport default HANDLE_HORIZONTAL_WHEEL;","import React, { useState, useEffect } from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\nimport {useTransition, animated} from 'react-spring'\n\nimport { PhotoRoomThemeType } from '../theme/PhotoRoomTheme';\nimport Button from './elements/Button';\n\n\nconst design = \n\"─────────────────╔╗───╔╗───╔╗──────────╔╗\\n\" +\n\"────────────────╔╝╚╗──║║──╔╝╚╗─────────║║\\n\" +\n\"╔══╦══╦═╗╔══╦═╦═╩╗╔╬╗╔╣║╔═╩╗╔╬╦══╦═╗╔══╣║\\n\" +\n\"║╔═╣╔╗║╔╗╣╔╗║╔╣╔╗║║║║║║║║╔╗║║╠╣╔╗║╔╗╣══╬╝\\n\" +\n\"║╚═╣╚╝║║║║╚╝║║║╔╗║╚╣╚╝║╚╣╔╗║╚╣║╚╝║║║╠══╠╗\\n\" +\n\"╚══╩══╩╝╚╩═╗╠╝╚╝╚╩═╩══╩═╩╝╚╩═╩╩══╩╝╚╩══╩╝\\n\" +\n\"─────────╔═╝║────────────────────────────\\n\" +\n\"─────────╚══╝────────────────────────────\";\n\nconst text =\n\"🎊🎉👏 Congratulations! 👏🎉🎊 \\n\\n\" +\n\"You reached the end of your dataset!\\n\\n\" +\n\"Refresh the page to be sure that you annotated all the images.\\n\\n\" +\n\" If after a refresh you get here, you're good to go on ! 🏋💻\";\n\n\ntype Props = {\n    navigationDirection: string;\n} & WithStylesProps;\n\nconst handleClickButton = () => window.location.reload(false);\nconst Screen = ({ css, styles }: WithStylesProps) => (\n    <div {...css(styles.card)}>\n        <p {...css(styles.paragraph)}>{design}</p>\n        <p>{text}</p>\n        <div {...css(styles.reloadButton)}>\n            <Button title=\"Reload the page\" isHidden={false} handleClick={handleClickButton} />\n        </div>\n    </div>\n);\n\n\nfunction FinalScreen(props: Props){\n    const { navigationDirection } = props;\n\n    const [inView, setInView] = useState(false)\n    useEffect(() => {\n        setInView(true)\n        return () => setInView(false);\n    }, []);\n\n\n    const translationInOut = `translateX(${navigationDirection === 'left' ? '-' : ''}100vw)`;\n    const content = {\n        from: { opacity: 0, transform: translationInOut },\n        enter: { opacity: 1, transform: 'translateX(0)' },\n        leave: { opacity: 0, transform: translationInOut },\n    };\n    const transitions = useTransition(inView, null, content)\n    \n    return (\n        <>\n            {transitions.map(({ item, key, props: propsBis}) =>\n                item && <animated.div key={key} style={propsBis}>\n                    <Screen {...props} />\n                </animated.div>\n                )\n            }\n        </>\n    );\n}\n\n\nexport default withStyles(({ unit, color, fontSize }: PhotoRoomThemeType) => ({\n    card: {\n        display: 'block',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        color: color.reversePage,\n        fontSize: fontSize.xlarge,\n        whiteSpace: 'pre-line',\n        margin: 'auto',\n        marginTop: '20vh',\n        width: '100vw',\n    },\n    paragraph: {\n        margin: `${4 * unit}px 0`,\n    },\n    reloadButton: {\n        width: '20%',\n        margin: 'auto',\n    },\n}))(FinalScreen);\n","import React from 'react';\nimport { withStyles, WithStylesProps } from 'react-with-styles';\n\nimport { PhotoRoomThemeType } from '../theme/PhotoRoomTheme';\nimport { ProgressProps } from '../types/Annotation';\n\n\ntype Props = {\n    progress: ProgressProps;\n    handlePressLeft: any;\n    handlePressRight: any;\n} & WithStylesProps;\n\nfunction Progress(props: Props){\n    const { progress, handlePressLeft, handlePressRight, css, styles } = props;\n    const { currentPage, numberImagesPerPage, totalImages } = progress;\n\n    const firstIndex = totalImages > 0 ? currentPage * numberImagesPerPage + 1 : 0;\n    const lastIndex = Math.min((currentPage + 1) * numberImagesPerPage, totalImages);\n    const pct = (currentPage * numberImagesPerPage * 100 / totalImages).toPrecision(4);\n    \n    return (\n        <div {...css(styles.progress)}>\n            <h3 {...css(styles.title)}>{firstIndex}-{lastIndex} / {totalImages}</h3>\n            <h3 {...css(styles.title)}>({pct}%)</h3>\n            <h3 {...css(styles.navigationArrows)}>\n                {currentPage > 0 && (\n                    <>\n                        <div onClick={handlePressLeft} {...css(styles.arrow)}>⬅</div>\n                        <div {...css(styles.arrow)}>|</div>\n                    </>\n                )}\n                <div onClick={handlePressRight} {...css(styles.arrow)}>⮕</div>\n            </h3>\n        </div>\n    );\n}\n\nexport default withStyles(({ unit, fontSize, color, speed, isNightMode }: PhotoRoomThemeType) => ({\n    title: {\n        marginBlockStart: unit,\n        marginBlockEnd: unit,\n        textAlign: 'right',\n    },\n    progress: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        fontSize: fontSize.medium,\n        paddingRight: 2 * unit,\n        fontWeight: 'bold',\n        borderRadius: 2 * unit,\n        background: isNightMode ? color.pageNight : color.pageDay,\n        color: isNightMode ? color.pageDay : color.pageNight,\n        transition: `background ${speed.fast}s ease-in-out, color ${speed.fast}s ease-in-out`,\n    },\n    bannerElement: {\n        transition: `transform ${speed.fast} ease-in-out, opacity ${speed.fast} ease-in-out`,\n    },\n    bannerHidden: {\n        transform: 'scale(0.9)',\n        opacity: 0,\n    },\n    arrow: {\n        display: 'inline-block',\n        margin: `${2 * unit}px ${0.25 * unit}px`,\n        cursor: 'pointer',\n    },\n    navigationArrows: {\n        position: 'absolute',\n        display: 'inline-block',\n        top: 4.5 * unit,\n    },\n}))(Progress);\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport SampleAnnotation from './components/SampleAnnotation';\nimport Banner from './components/Banner';\nimport FetchService from './services/Fetch';\nimport HANDLE_KEY_PRESS, { useKeyboard } from './services/Keyboard';\nimport HANDLE_HORIZONTAL_WHEEL, { useHorizontalWheel } from './services/Wheel';\nimport { SampleType } from './types/Annotation';\nimport FinalScreen from './components/FinalScreen';\nimport Progress from './components/Progress';\nimport { getAnnotator, getImgPerPage, getDatasetPath, getIdColumnName, getSha } from './services/LocalStorage';\nimport { readUrl } from './services/Location';\n\nconst HTTP_API = 'http://t2.artizans.ai:36779/api/';\nconst NUMBER_IMAGES_PER_PAGE = getImgPerPage();\n\nconst fetchService = new FetchService({\n  'api_address': HTTP_API,\n  'images_per_page': NUMBER_IMAGES_PER_PAGE\n});\n\nconst noop = () => {};\n\n\ntype Props = {\n  nightMode: boolean;\n  changeNightMode: Function;\n};\n\nfunction App(props: Props) {\n  const { nightMode, changeNightMode } = props\n  const [bannerOpen, setBannerOpen] = useState(!getAnnotator() || !getDatasetPath() || !getIdColumnName() || !getSha());\n  const [samples, setSamples] = useState<SampleType[]>([]);\n  const [navigationDirection, setNavigationDirection] = useState('none');\n\n  const updateSamples = (direction: string) => {\n    setNavigationDirection(direction);\n    setSamples(fetchService.getSample());\n  };\n\n  useEffect(() => {\n    readUrl();\n    fetchService.getAnnotations().finally(() => updateSamples('none'));\n  }, []);\n\n  const pressLeft = () => fetchService.decrPage().then(() => updateSamples('left'));\n  const pressRight = () => fetchService.incrPage().then(() => updateSamples('right'));\n  const pressNext = () => fetchService.nextPage().then(() => updateSamples('right'));\n\n  const handleKeyPress = (event: Event) =>\n    !bannerOpen ? HANDLE_KEY_PRESS(event, pressLeft, pressRight, pressNext) : noop;\n  useKeyboard(handleKeyPress);\n\n  const handleSideScroll = (event: Event) =>\n    !bannerOpen ? HANDLE_HORIZONTAL_WHEEL(event, pressLeft, pressRight) : noop;\n  useHorizontalWheel(handleSideScroll);\n\n  const handleChangeValue = (value: boolean, index: number) =>\n    fetchService.setValue(value, index);\n\n\n  return (\n    <div className=\"App\">\n      <Banner\n        handleBanner={setBannerOpen}\n        isBannerOpen={bannerOpen}\n        nightMode={nightMode}\n        changeNightMode={changeNightMode}\n      />\n      {samples.length !== 0 ? (\n        <SampleAnnotation \n          images={samples} \n          isBannerOpen={bannerOpen}\n          handleChangeValue={handleChangeValue}\n          navigationDirection={navigationDirection}\n          fetchService={fetchService}\n        />\n      ) : (\n        <FinalScreen navigationDirection={navigationDirection} />\n      )}\n      {samples.length !== 0 && (\n        <Progress\n          progress={fetchService.getProgress()}\n          handlePressLeft={pressLeft}\n          handlePressRight={pressRight}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\nimport WithStylesContext from 'react-with-styles/lib/WithStylesContext';\nimport AphroditeInterface from 'react-with-styles-interface-aphrodite';\n\nimport PhotoRoomTheme from './theme/PhotoRoomTheme';\nimport App from './App';\n\n\nconst now = new Date().getHours();\nconst NIGHT_MODE = now <= 8 || now >= 20;\n\nconst SET_BACKGROUND_COLOR = (nightMode) =>\n  `transition: background ${PhotoRoomTheme(nightMode).speed.fast}s ease; background: ${PhotoRoomTheme(nightMode).color.page}`;\n\n\nfunction Bootstrap() {\n  const [nightMode, setNightMode] = useState(NIGHT_MODE);\n\n  const handleNightMode = () => setNightMode(!nightMode);\n\n  document.body.style = SET_BACKGROUND_COLOR(nightMode);\n\n  return (\n    <WithStylesContext.Provider\n      value={{\n        stylesInterface: AphroditeInterface,\n        stylesTheme: PhotoRoomTheme(nightMode),\n      }}\n    >\n      <App\n        nightMode={nightMode}\n        changeNightMode={handleNightMode}\n      />\n    </WithStylesContext.Provider>\n  )\n}\n\nexport default Bootstrap;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Bootstrap from './Bootstrap';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Bootstrap />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/photoroom_logo.fcbc0765.png\";"],"sourceRoot":""}